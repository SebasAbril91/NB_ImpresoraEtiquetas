/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.make.impresoraetiquetas;

import java.awt.Font;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Calendar;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;

/**
 *
 * @author Sebas Abril
 */
public class InterfazImpresion2 extends javax.swing.JFrame {

    private int numLineasInfoEnvio = 0;
    private int numLineasInfoCont = 0;

    /**
     * Creates new form InterfazImpresion
     */
    public InterfazImpresion2() {
        initComponents();
        cargarConfiguracionInicial();
    }

    private void cargarConfiguracionInicial() {
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        SwingUtilities.invokeLater(() -> {
            PrintService[] ps = PrintServiceLookup.lookupPrintServices(null, null);
            String[] imp = new String[ps.length];
            for (PrintService p : ps) {
                JCmbImpresora.addItem(p.getName());
            }
        });
    }

    @Override
    public Image getIconImage() {
//        Image retValue = Toolkit.getDefaultToolkit().getImage("src/main/java/com/make/impresoraetiquetas/resources/logo1.png");
        Image retValue = Toolkit.getDefaultToolkit().getImage(this.getClass().getClassLoader().getResource("com/make/impresoraetiquetas/resources/logo1.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JCmbImpresora = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMasInformacion = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        txtCodigoBarras = new javax.swing.JTextField();
        JBtImprimir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtCiudad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtProvincia = new javax.swing.JTextField();
        btnCerrar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInfoCont = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Etiqueta de env√≠o");
        setIconImage(getIconImage());

        JCmbImpresora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR IMPRESORA" }));
        JCmbImpresora.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JCmbImpresoraItemStateChanged(evt);
            }
        });

        txtMasInformacion.setColumns(20);
        txtMasInformacion.setRows(5);
        jScrollPane1.setViewportView(txtMasInformacion);

        jLabel2.setText("Codigo de Barras:");

        JBtImprimir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        JBtImprimir.setText("Imprimir");
        JBtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtImprimirActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre:");

        jLabel4.setText("Direccion:");

        jLabel6.setText("Ciudad:");

        jLabel7.setText("Telefono:");

        jLabel8.setText("Email:");

        jLabel9.setText("Mas informacion:");

        txtCiudad.setActionCommand("null");

        jLabel10.setText("Provincia:");

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtInfoCont.setColumns(20);
        txtInfoCont.setRows(5);
        jScrollPane2.setViewportView(txtInfoCont);

        jLabel11.setText("Contenido:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JBtImprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(JCmbImpresora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCodigoBarras))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtDireccion)
                                    .addComponent(txtNombre)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jScrollPane2))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JCmbImpresora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBtImprimir)
                    .addComponent(btnCerrar)
                    .addComponent(btnLimpiar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtImprimirActionPerformed
        String impresora = JCmbImpresora.getSelectedItem().toString();
        PrintService printService = findPrintService(impresora);

        //ZPL CODDE
        // Ajuste de posicion de etiqueta (Plantilla).
        Point posInicialXY = new Point(100, 10);

        // Informacion de envio.
        int iE_alturaFuente = 35;
        int iE_interlineado = 32;
        Point iE_posXY = new Point(375 + posInicialXY.x, 15 + posInicialXY.y);
        String informacionEnvio = getInformacionEnvio(iE_alturaFuente, iE_interlineado, iE_posXY);
//        System.out.println(informacionEnvio);

        // Verifico que no se sobreescriba informacion en la etiqueta.
        if (numLineasInfoEnvio > 8) {
            String opciones[] = {"Continuar", "Cancelar"};
            int ventana = JOptionPane.showOptionDialog(this,
                    "Es posible que el texto de informaci√≥n de env√≠o sobrescriba parcialmente la etiqueta, Se imprimir√° "
                    + String.valueOf(numLineasInfoEnvio) + " l√≠neas de informaci√≥n de env√≠o, mientras que lo recomendado "
                    + "es 8. ¬øDesea continuar con la impresi√≥n o cancelar?",
                    "Impresi√≥n de etiqueta",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.WARNING_MESSAGE,
                    null, opciones, opciones[1]);
            if (ventana == 1) {
                return;
            }
        }

        // Informacion de contenido.
        int iC_alturaFuente = 30;
        int iC_interlineado = 28;
        Point iC_posXY = new Point(100 + posInicialXY.x, 15 + posInicialXY.y);
        String informacionContenido = getInformacionContenido(iC_alturaFuente, iC_interlineado, iC_posXY);

        // Verifico que no se sobreescriba informacion en la etiqueta.
        if (numLineasInfoCont > 3) {
            String opciones[] = {"Continuar", "Cancelar"};
            int ventana = JOptionPane.showOptionDialog(this,
                    "Es posible que el texto de informaci√≥n de contenido sobrescriba parcialmente la etiqueta, Se imprimir√° "
                    + String.valueOf(numLineasInfoCont) + " l√≠neas de informaci√≥n de contenido, mientras que lo recomendado "
                    + "es 3. ¬øDesea continuar con la impresi√≥n o cancelar?",
                    "Impresi√≥n de etiqueta",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.WARNING_MESSAGE,
                    null, opciones, opciones[1]);
            if (ventana == 1) {
                return;
            }
        }
        
        // Fecha de envio.
        int fE_alturaFuente = 30;
        Point fE_posXY = new Point(5 + posInicialXY.x, 15 + posInicialXY.y);

        // Numero de orden.
        int nO_alturaFuente = 30;
        Point nO_posXY = new Point(5 + posInicialXY.x, 360 + posInicialXY.y);

        // Codigo de barra.
        long cB_codigo = 0L;
        int cB_altura = 90;
        Point cB_posXY = new Point(40 + posInicialXY.x, 505 + posInicialXY.y);
        try {
            cB_codigo = Long.parseLong(txtCodigoBarras.getText());
        } catch (NumberFormatException ex) {
        }

//        String plantilla = "^XA\n"
//                + "^FX Plantilla (IMAGEN).\n"
//                + "^FO" + String.valueOf(posInicialXY.x) + "," + String.valueOf(posInicialXY.y) + "^GFA,61940,61940,76,,::::::::::::::gT018iW03,gT038iW07,:::::gT038iW07R03F,gN01FFI038iW07Q07FFC,gN0IFC0038iO01KF807P07IFE,gM01IFE0038iO01KFC07O07JFE00FF8,gM03F03F0038iO01KFC07N07IF0FF0IFC,gM07C0078038iW07M03IF003F7IFE,gM078003C038iW07M0IFI01LF,gM07I01C038iW07L03FFK0LF8,gM0EI01C038iW07L0FF8K0IF81F8,gM0EI01E038iW07K03FCL0FFC00FC,gM0EI01E038iO01IFEI07K07FM07CI0FC,gM0EI01E038iO01IFEI07K0FCM078I07E,gM0EI01C038iO01IFCI07K0F8M07CI07E,gM07I01C038iS0CI07J01FN07CI03E,gM07I01C038iS0EI07J01EN07CI03F,gM07J08038iS06I07J03CN07CI03F,gM02L038iS06I07J03CN03CI01F,gT038iS06I07J03CN03CI01F,gT038iS06I07J038N03CI01F8,gN07EJ038iS0EI07J078N03CI01F8P018,gM01FF8I038iO01IFEI07J078N03EJ0F8P07E,gM03FFCI038iO01IFCI07J078N03EJ0F8P0FF,gM0781EI038iO01IFJ07J078N03EJ0F8O01FF8,gM07007I038iW07J078N03EJ0FCO01FF8,gM0E003I038iW07J07O03EJ07CO01FF8,gM0C003I038iW07J07O03EJ07CO01FF8,gM0C003I038iS06I07J07O03EJ07CO01FF8,gM0E003I038iS06I07J07O01EJ07CP0FF8,gM0E007I038iP0IF7I07J07O01EJ07EM0180FF,gM0700FI038iO01KF007J07O01EJ03EM0E003E,gM07FFEI038iO01KF807J07O01EJ03EL0F,gM03FFCI038iS073C07J07O01EJ03EK0F8,gN0FF8I038iS061C07J07O01EJ03EJ0FE,gT038iS060C07J07O01EJ03EI07F,gT038iS060C07J07O01EJ03F007F8,gT038iU0C07J07O01EJ03F07FE,gM04001I038iU0407J07O01EJ03F3FF,gM0JFI038iW07J07O01EJ03IF8,gM0JFI038iP01FEJ07J07O01EJ01FFE,gP0CI038iP07FF8I07J07I03CJ01EJ01FF,gP06I038iP07FFCI07J07I0FFJ01EJ01FC,gP03I038iP0E01EI07J07001FF8I01EJ01F,gP03I038iP0C00EI07J07001FF8I01EJ01F,gP03I038iO01C006I07J07003FFCI01EJ01F8,:gP07I038iO01C006I07J07003FFCI01EJ01F8,gM0JFI038iO01C006I07J07003FFCI01EJ01F8,gM0IFEI038iP0E00EI07J07801FF8I01EJ01F8,gM07FFCI038iP0F01EI07J07801FF8I03EJ01F8,gP06I038iP07FFCI07J07800FFJ03EJ01F8,gP03I038iP03FF8I07J078007EJ03EJ01F8,gP03I038iQ0FEJ07J038N03EJ01F8,gP03I038iW07J03CN03EK0F8,:gP07I038iW07J03EN03EK0FC,gM0JFI038iO01IFEI07J01EN03CK0FC,gM0IFEI038iO01IFEI07J01FN03CK0FC,gM0IF8I038iO01IFEI07K0F8M03CK0FC,gT038iR038I07K07EM07CK0FC,gT038iS0CI07K03F8L07CK0FC,gT038iS06I07K01FFL07CK0FC,gT038iS06I07L0IFK0FCK0FC,gK03KFI038iS06I07L03IFC001F8K0FC,gK03KFI038iS06I07M0NF8K0FC,gK03KFI038iS02I07M01MF8K0FC,gM06007I038iW07O0LFL0FC,gM0C003I038iW07P03JFL0FC,gM0C003I038iO01IFEI07T07L0FC,:gM0E003I038iO01IFEI07T07L0FC,gM0E007I038iR01CI07T07L0FC,gM07007I038iS0EI07T07L0FC,gM07C1EI038iS06I07T07L0FC,gM03FFEI038iS06I07T07L0FC,gM01FFCI038iS06I07T07L0FC,gN03EJ038iS06I07T07L0FC,gT038iR01EI07T07L0FC,gT038iO01IFEI07T07L0FC,gT038iO01IFCI07T07L0FC,gN0FFJ038iR01CI07T07L0FC,gM03FFCI038iS0EI07T07L0FC,gM07FFEI038iS06I07R07FFL0FC,gM0700FI038iS06I07P0KFL0FC,gM0E007I038iS06I07N03LFL0FC,gM0E003I038iS06I07M03MF8K0FC,gM0C003I038iS0EI07L01NF8K0FC,gM0C003I038iO01IFEI07L07IFI01F8K0FC,gM0E003I038iO01IFCI07L0FFEK0FCK0FC,gM07007I038iO01IFJ07K03FEL07CK0FC,gM0781FI038iW07K07FM07CK0FC,gM03FFEI038iW07K0FCM07CK0FC,gM01FFCI038iW07K0F8M03CK0FC,gN07EJ038iP03CK07J01FN03CK0FC,gT038iP07F04I07J01EN03CK0FC,gT038iP0FF8EI07J03EN03EK0FC,gT038iO01C386I07J03CN03EK0F8,gM0JFI038iO01C186I07J03CN03EJ01F8,gM0JFI038iO01C1C6I07J078N03EJ01F8,gM0IFEI038iO01C0C6I07J0780078J03EJ01F8,gP06I038iP0C0C6I07J078007CJ03EJ01F8,gP07I038iP0C0CEI07J078003EJ03EJ01F8,gP03I038iP071DEI07J078001EJ01EJ01F8,gP03I038iP0IFCI07J07J0FJ01EJ01F8,gP03I038iP0IF8I07J07J0FJ01EJ01F8,gP03I038iO01FFCJ07J07J0FJ01EJ01F8,gP0FI038iO018L07J07I01EJ01EJ01F8,gM0JFI038iW07J07I03EJ01EJ01F,gM0IFEI038iW07J07I07CJ01EJ01F,gM0IFJ038iQ0FCJ07J07I078J01EJ01F,gT038iP03FFJ07J07I04K01EJ01F,gT038iP07FF8I07J07O01EJ01FC,gT038iP0F03CI07J07O01EJ03FE,gN0FFJ038iP0E00EI07J07O01EJ03FF,gM01FF8I038iO01C00EI07J07O01EJ03FF8,gM03FFCI038iO01C006I07J07O01EJ03E7C,gM078CEI038iO01C006I07J07O01EJ03E1F,gM070C7I038iO01C006I07J07O01EJ03E0F8,gM0E0C3I038iO01C006I07J07O01EJ03E03C,gM0E0C3I038iP0C006I07J07O01EJ03E01E,gM0C0C3I038iP0E00EI07J07O01EJ07E007,gM0C0C3I038iP0C004I07J07O01EJ07C0038,gM0E0C3I038iW07J07O01EJ07CI0E,gM0E0C7I038iW07J07O03EJ07CI07,gM060CFI038iS02I07J07O03EJ07CI018,gM060FEI038iS06I07J07O03EJ07CJ0C,gO0FCI038iS06I07J078N03EJ0FCJ06,gO0FJ038iO01IFE3807J078N03EJ0F8J018,gT038iO01IFE3C07J078N03EJ0F8K0C,gT038iO01IFE3807J078N03EJ0F8K02,gT038iW07J038N03CI01F8K01,gM0JFI038iW07J038N03CI01F8,gM0JFI038iW07J03CN03CI01FO0E,gM0IFEI038iP01FEJ07J03CN03CI03FN03F,gP06I038iP03FF8I07J03CN07CI03FN07F8,gP07I038iP07FFCI07J01EN07CI03EN0FFC,gP03I038iP0F01EI07J01FN07CI03EN0FFC,gP03I038iP0C00EI07K0F8M07CI07EN0FFC,gP03I038iO01C006I07K0FEM078I07EN0FFC,gP03I038iO01C006I07K03F8L0FEI0FCN0FFC,gP0FI038iO01C0063807K01FEL0FFC00FCN07FC,gM0JFI038iO01C0061E07L0FFCK0IFC1F8N07F8,gM0IFEI038iP0C00E0F07L03FF8I01LF8N01F,gM0IFJ038iP0F01E0307M0IF8001LF,gT038iP07FFCI07M01IF803F3IFE,gT038iP03FF8I07N03IFDFF07FFC,gT038iP01FEJ07O03JFE007F,gP03I038iW07P03IFC,gP03I038iW07Q03FF8,gM01JF0038iW07R01E,gM07JF0038iW07,gM07JF8038iO01IFEI07,gM0E003I038iO01IFEI07,gM0E003I038iO01IFCI07,gM0C003I038iS0CI07,gM0C003I038iS0EI07,gM0EL038iS06I07,gT038iS06I07,::gN07EJ038iS0EI07,gM01FF8I038iO01IFEI07,gM03FFCI038iO01IFCI07J03TFC003C,gM078CEI038iO01IFJ07J03TFC003FF,gM070C7I038iW07J03TFC003IF8,gM0E0C3I038iW07J03TFC003JFE,gM0E0C3I038iW07J03TFC003LF,gM0C0C3I038iW07J03TFC001MFC,gM0C0C3I038iW07J03TFCJ0MFE,gM0C0C3I038iW07J03TFCK07KFE,gM0E0C7I038iW07J03TFCL01JFE,gM060CFI038iW07J03TFCM07IFE,gM060FEI038iW07J03TFCL03JF,gO0FCI038iW07Q07FCQ01JF8,gO0FJ038iW07Q07FCQ0JF8,gT038iW07Q07FCP07IFC,gT038iQ078J07Q07FCO07IFC,gM0603CI038iP03FEJ07Q07FCN03IFE,gM0707EI038iP07FF8I07Q07FCN03FFE,gM0E0FFI038iP0F8FCI07Q07FCN03IF8,gM0E0E7I038iP0E01EI07Q07FCO0JF8,gM0C0C3I038iO01C00EI07Q07FCO01JF8,gM0C1C3I038iO01C006I07Q07FCP03JF,gM0E383I038iO01C006I07Q07FCQ07JF,gM07F83I038iO01C006I07Q07FCR0JFE,gM07F07I038iO01C006I07Q07FCR01JFE,gM03EK038iP0C00EI07Q07FCS07IFE,gT038iP0EFDEFC07Q07FCR0KFE,gT038iO01KFC07Q07FCP03LFE,gT038iO01KFC07Q07FCO0NF,gT038iW07Q07FCN03LFC,gT038iW07Q07FCN03KF,gT038iW07Q07FCN03IFE,gT038iQ07CJ07Q07FCN03FF8,gT038iP01FFJ07Q07FCN03F,gT038iP07FF8I07Q07FC,gT038iP0F9BCI07Q07FE,gT038iP0E18EI07J03TFCJ0F8,gT038iP0C186I07J03TFCI07FF,gN0FFJ038iO01C186I07J03TFCI0IF8,gM01FFCI038iO01C186I07J03TFC001IFC078,gM03FFEI038iO01C186I07J03TFC001IFC0F8,gM070CEI038iO01C186I07J03TFC003IFE0F8,gM060C7I038iO01C18EI07J03TFC003F07E0FC,gM0E0C3I038iP0C18EI07J03TFC003E03F0FC,gM0C0C3I038iP0E1FCI07J03TFC003E01F07C,gM0C0C3I038iQ01F8I07J03TFC003E01F07C,gM0C0C3I038iQ01FJ07gH03E01F07C,gM0E0C3I038iW07gH03E01F0FC,gM060C7I038iW07gH01F01F0FC,gM070CEI038iW07gH01F81F1F8,gM060FEI038iW07gI0FE1F7F8,gO0FCI038iW07gI0LF8,gO0EJ038iW07gH01LF,gT038iW07gH03KFE,gT038iW07gH03KFC,gT038iW07gH03KF,gM01JFE038iW07gH03F,gM07JFE038iW07M03QFC0018,gM07JFE038iW07L01RFC,gM0EL038iP01FFJ07L07RFC,gM0EL038iP03FF8I07L0SFC,gT038iP07DFCI07K01SFC003OF,gT038iP0E18EI07K03SFC003OF,gT038iP0C18EI07K07SFC003OF,gN0FEJ038iO01C186I07K0TFC003OF,gM01FF8I038iO01C186I07K0TFC003OF8,gM03FFCI038iO01C186I07J01TFCK0FF,gM078CEI038iO01C186I07J01JFV07F8,gM070C7I038iO01C186I07J03IFW03FC,gM0E0C3I038iP0C18EI07J03FFCW03FE,gM0E0C3I038iP0E1BCI07J07FF8W0IF8,gM0C0C3I038iP0C1FCI07J07FFW03IFC,gM0C0C3I038iQ01FJ07J07FFW07IFE,gM0E0C3I038iW07J07FEV01FFCFF,gM0E0C7I038iW07J07FEV07FF87F8,gM060CFI038iW07J07FCU01FFE03F8,gM060FEI038iW07J07FCU03FF800F8,gO0FCI038iO01IFEI07J07FCU03FFI078,gO0FJ038iO01IFEI07J07FCU03FCI038,gT038iR01CI07J07FCU03FJ018,gT038iS0CI07J07FCU03CK08,gN0FEJ038iS06I07J07FCU038,gM01FF8I038iS06I07J07FE,gM03FFCI038iS06I07J07FEW03FF8,gM0781EI038iS06I07J07FEW0IFE,gM07007I038iS0EI07J07FFV03JF8,gM0E007I038iR03EI07J07FFV07JFC,gM0E003I038iO01IFCI07J03FF8U0KFE,gM0C003I038iO01IF8I07J03FFCT01LF,gM0C003I038iW07J03FFET01FE3E7F8,gM0E003I038iW07J01IFCS03F83E1F8,gM06007I038iW07J01TFC003F03E0F8,gM07007I038iS02I07K0TFC003F03E0FC,gM06002I038iR01EI07K0TFC003E03E0FC,gT038iR07EI07K07SFC003E03E07C,gT038iQ01FCI07K03SFC003E03E07C,gT038iQ07EJ07K01SFC003E03E0FC,gP03I038iP03F8J07L0SFC003E03E0FC,gP03I038iP0FCK07L07RFC003F03E1F8,gN0JF0038iO01F8K07L01RFC003F03E3F8,gM03JF0038iP07EK07M07QFC001F83EFF,gM07JF8038iQ0FCJ07N07PFC001F83IF,gM0F003I038iQ03F8I07gI0E03FFE,gM0E003I038iR0FEI07gK03FFC,gM0C003I038iR01EI07gK03FF8,gM0C003I038iS06I07gK03FC,gM0E003I038iW07,gM04L038iW07,gT038iS06I07,gT038iS06I07gH03LF8,gT038iO01IFEI07gH03LF8,gM0JFI038iO01IFE3007gH03LF8,gM0JFI038iO01IFE1E07J03TFC003LF8,gM0JFI038iU0F07J03TFC003LF8,gP0CI038iU0707J03TFC001LF8,gP06I038iU0107J03TFCM07F,gP03I038iQ038J07J03TFCM01F8,gP03I038iP01FFJ07J03TFCN0F8,gP03I038iP07FF8I07J03TFCN0FC,gP03I038iP0F87CI07J03TFCN07C,gT038iP0E00EI07J03TFCN07C,gT038iO01C006I07J03TFCN0FC,gN0FFJ038iO01C006I07J03TFCN0FC,gM01FFCI038iO01C006I07J03FEJ01FEI07FCN0FC,gM03FFEI038iO01C006I07J03FCJ01FEI07FCN018,gM0700EI038iO01C006I07J03FCJ01FEI07FC,gM06007I038iP0E00EI07J03FCJ01FEI07FC,gM0E003I038iP0F83CI07J03FCJ01FEI07FC,gM0C003I038iP07FFCI07J03FCJ01FEI03FCN0301C,gM0C0031C038iP03FFJ07J03FCJ01FEI07FCN0F83F,gM0E0030F038iQ078J07J03FCJ01FEI07FCN07EFF,gM0600707838iW07J03FEJ03FEI07FCN03IF,gM0780F01838iW07J03FEJ03FEI07FCN01IF,gM03FFEI038iW07J03FEJ03FEI07FCO0IF,gM01FFCI038iW07J03FEJ03FFI07FCO03FE,gN0FFJ038iP0E00EI07J03FEJ03FFI0FFCP0FC,gT038iO01F01EI07J03FFJ07FF801FFCI08I0F8,gT038iO01F01EI07J03FFJ07FFE03FFC001F003FE,gT038iP0E01EI07J01FF8I0NF8001F807FF,gM0JFI038iW07J01FFCI0NF8003F00IF8,gM0JFI038iW07J01FFE003NFI03F01IF8,gM0IFEI038iW07J01IFC0OFI03E01IFC,gP06I038iW07K0MFEKFEI03E03F8FC,gP07I038iW07K0MFE7JFEI03E03F07C,gP03I038iW07K07LFC3JFCI03E07E07C,gP03I038iW07K03LFC3JF8I03E0FE07C,gP03I038iW07K03LF81JFJ03F0FC07C,gP03I038iW07K01LF807FFCJ03IFC0FC,gP07I038iW07L0LF001FFK01IF80F8,gM0JFI038iW07L07JFCP01IF81F8,gM0IFEI038iW07J0F03JF8Q0IF0078,gM0IF8I038iW07I01080IFER07FE,gT038iW07I02FC01FFS01F8,gT038iW07I029C,gT038iW07I028C,gP03I038iW07I0108,gP03I038iW07I01F8,gM0JF0C038iW07,gM0JF1C038iW07,:gR08038iW07,gT038iW07,::gN0FFJ038iW07,gM01FFCI038iW07,gM03EFEI038iW07,gM0700EI038iW07,gM06007I038iW07,gM0E003I038iW07,gM0C003I038iW07,::gM0E003I038iW07,gM06007I038iW07,gM07007I038iW07,gP02I038iW07,gT038iW07,::gN0FFJ038iW07,gM01FFCI038iW07,gM03FFEI038iW0703NFE0LFC007FE07NF8,gM0700FI038iW0703NFE0LFC007FE07NFC,gM0E007I038iW0703NFE0LFC007FE07NF8,gM0E003I038iW0703NFE0LFC007FE07NF8,gM0C003I038iW0703NFE0LFE007FE07NF8,gM0C003I038iW0703FL07EM01JFE07EL0F8,gM0E003I038iW0703FL07EM01JFE07CL0F8,gM07007I038iW0703FL07EM03JFE07CL0F8,gM0780FI038iW0703FL07EM03JFE07CL0F8,gM03FFEI038iW0703FL07EM03JFE07CL0F8,gM01FFCI038iW0703FL07EL07JFBE07CL0F8,gN07FJ038iW0703F07IF07E0F8I07EI03E07C1IFE0F8,gT038iW0703F07IF07E0F8I07EI03E07C1IFE0F8,:gM0603CI038iW0703F07IF07E0F8I07EI03E07C1IFE0F8,gM0707EI038iW0703F07IF07EL07CI03E07C1IFE0F8,gM0E0FFI038iW0703F07IF07EK0F800F83E07C1IFE0F8,gM0E0E7I038iW0703F07IF07EK0F800F83E07C1IFE0F8,gM0C0C3I038iW0703F07IF07EK0F800F83E07C1IFE0F8,gM0C1C3I038iW0703F07IF07EK0F800F83E07C1IFE0F8,gM0E383I038iW0703F07IF07EK0F800F83E07C1IFE0F8,gM07F87I038iW0703F07IF07E0FFE007FF003E07C1IFE0F8,gM07F07I038iW0703F07IF07E0FFE007FF003E07C1IFE0F8,gM03EK038iW0703F07IF07E0FFE007FF003E07C1IFE0F8,gT038iW0703F07IF07E0FFE007FF003E07C1IFE0F8,:gT038iW0703FL07E007E0F83FK07CL0F8,gT038iW0703FL07E007E0F81FK07CL0F8,:gM0700FI038iW0703FL07E007E0F81FK07CL0F8,gM0F80FI038iW0703FL07E007E0F81FK07CL0F8,gM0F80FI038iW0703NFE07C1FJ0FJ07NF8,gM07007I038iW0703NFE0F81F07C0F83E07NF8,gT038iW0703NFE0F81F07C0F83E07NF8,:gT038iW0703NFE0F81F07C0F83E07NFC,gT038iW0701NFC0481F07C0F83E07NF8,gT038iW07V0FFC007FE,::::gT038iW0703LF03FF001IFC0IFE07FE07C1F,gT038iW0703LF07FF001IFC0IFE07FE07C1F,:gT038iW0703LF03FF001IFC0IFE07FE07C1F,gT038iW0703LF07FF001IFC0IFE07FE07C1F,gT038iW0703NFE0F801MFEK07JF8,gT038iW0703E07C1IFE0F800MFEK07JF8,:::gT038iW0701FFN07C07MFE0200107F7F8,gT038iW07001F8N07IF83F003E07IF03E,:::gT038iW07I0FO07IF83F001E07IF07F,gT038iW07L01IFEL07IF8M07IF,::::gT038iW0703FF03E003E0FFC0F800F81IFC1F801F,gT038iW0703FF83E003E0FFE0F800F83IFC1F801F,:gT038iW0703FF83E003E0FFC0F800F83IFC1F801F,gT038iW0703FF83E003E0FFE0F800F83IFC1F801F,gT038iW07011IFEK047IF8J011F83FF8I0F8,gT038iW07001IFEL07IF8L0F83FFJ0F8,:::gT038iW07I0IFEM03FF8N03F1,gT038iW0703E0FFE0FC00F81FF83F003E07FF,:::gT038iW0703E0IF0FC00F81FF83F003F07FF,gT038iW07001LFC1F001F07IF83FF83F07C1F,:::gT038iW07001LFC1F001F07IF83FF83F07C1F8,gT038iW07001F87NFE0JF07C0KF801FF8,gT038iW07001F83NFE0JF07C0KF801FF8,gT038iW07001F87NFE0JF07C0KF801FF8,gT038iW07001F83NFE0JF07C0KF801FF8,gT038iW07001F87NFE0JF07C0KF801FF8,gT038iW0701DPFCI07FF07FE,gT038iW0703LFJ0FCI07FF07FE,:::gT038iW0703LFJ0FCI07EE07FE,gT038iW0703FF83FF03E0FFE007E0F8I07NF8,::::gT038iW07001FFC1FJ0LFE007FE07CL0F8,:::gT038iW07001FFC1F8I0LFE007FE07CL0F8,gT038iW0703FF83MFCI07E0F8I07C0IFE0F8,gT038iW0703FF03MFCI07E0F8I07C1IFE0F8,::gT038iW0703FF83MFCI07E0F8I07C1IFE0F8,gT038iW0703F003MFCI07FFK07C1IFE0F8,gT038iW0703E003FF8I0FC1F07FF003E07C1IFE0F8,gT038iW0703F003FF8I0FC1F07FF003E07C1IFE0F8,::gT038iW0703F003FF8I0FC1KFE01207C1IFE0F8,gT038iW0703FI01F801FFC1IFE0F8I07C1IFE0F8,:::gT038iW0703FI01F803FFC3IFE1F8I07C0IFE0F8,gT038iW0703F003E003SFE07CL0F8,::::gT038iW0703LF03F0FC3F07E1F8I07NF8,gT038iW0703LF03E0FC1F07E0F8I07NF8,:::gT038iW07,::::::::::::::::::::::::gT038iW07J018M0FY07,gT038iW07I01F8L07FFJ06S0F,gT038iW07I07FL01IFCI078R0F,gT038iW07003F8L03IFEI07FR0F,gT038iW0701FCM07C01FI03FCQ0F,gT038iW0701F8M0FI078I07F8P0F,gT038iW07007EM0EI038I03FEP0F,gT038iW07I0F8K01EI03CI079FCO0F,gT038iW07I03FK01CI01CI0787FO0F,gT038iW07J0F8J01CI01CI0780FEI0LF,gT038iW07I03FK01CI01CI0780FEI0LF,gT038iW07I0F8K01CI01CI0787F8I0LF,gT038iW07003EL01CI01CI07BFCJ0LF,gT038iW0701F8M0EI01CI07FEK0LF,gT038iW0701F8M0EI038I07F8P0F,gT038iW07007F8L0FI018003FCQ0F,gT038iW07I0FEL06M07FR0F,gT038iW07I01F8S078R0F,gT038iW07J038S06S0F,gT038iW07gI08O0F,gT038iW07Q07IFM078O0F,gT038iW07J038K0JFL01F8O0F,gT038iW07I01F8K0JFL0FFP0F,gT038iW07I0FEK01CN03F8P07,gT038iW07007F8K018N0FC,gT038iW0701F8L018M07F,gT038iW0701F8L018M07EM0LF,gT038iW07003EL018M01F8L0LF,gT038iW07I0FCL0CN03FL0LF,gT038iW07I03FL0EO0FCK0LF,gT038iW07J0F8J01JFL03F8J0LF,gT038iW07I03EK01JFM078,gT038iW07I0F8K01JFM018,gT038iW07007E,gT038iW0701F8,gT038iW0701FC,gT038iW07003F8M03U0LF,gT038iW07I07FL01FFK03N0LF,gT038iW07I01F8K03FF8J078M0LF,gT038iW07J018K07FFCJ07CM0LF,gT038iW07Q0F1CEJ078M0LF,gT038iW07K08J01C1C6J03N0F01E0F,gT038iW07J038J01C1C7S0F01E0F,gT038iW07I01F8J0181C3S0F01E0F,gT038iW07I0FEK0181C3S0F01E0F,gT038iW07007FL0181C3S0F01E0F,gT038iW0701F8L0181C7S0F01E0F,gT038iW0700F8L01C1C6S0F01E0F,gT038iW07003EM0C1CES0F01E0F,gT038iW07I0FCL0C1FCS0F01E0F,gT038iW07I01FM01FCS0FJ0F,gT038iW07J0F8L01FT0FJ0F,gT038iW07I03EgI0FJ0F,gT038iW07001F8gI07J07,gT038iW07007C,gT038iW0701F8L01JF,gT038iW0701FEL01JF,gT038iW07003F8K01JF,gT038iW07I07FO0CN0EJ0LF,gT038g0gKF801gJFEJ07J0F8N06N06J0LF,gT038J01PF8J0gKF801gJFEJ07J018N06N07J0LF,gT038J01PF8J0gKF801gJFEJ07T03N038I0KFE,gT038J01PF8J0F8gH07801EgH01EJ07T03J07JF8L01FC,gT038J01PF8J0FgI07801CgI0EJ07T03J07JFCL03F8,gT038J01PF8J0FgI07801CgI0EJ0701CQ07J07JFEL07E,gT038J01PF8J0FgI07801CgI0EJ0701CQ0EV0FC,gT038J01PF8J0FgI07801CgI0EJ0701CM01IFEU01F8,gT038J01PF8J0FgI07801CgI0EJ07008M01IFCU03F,gT038O03F803F8J0FgI07801CgI0EJ07P01IFV07E,gT038O03F803F8J0FgI07801CgI0EJ07gP0FC,gT038O03F803F8J0FgI07801CgI0EJ07gO01F8,gT038O03F803F8J0FgI07801CgI0EJ07Y04O07F,gT038O03F803F8J0FgI07801CgI0EJ07R0FCK06I01CJ0FE,gT038O03F803F8J0FgI07801CgI0EJ0701IF8K03FFK078001CI01KF,gT038O03F803F8J0FgI07801CgI0EJ0701IF8K07FFCJ07EI0EI03KF,gT038O03F803F8J0FgI07801CgI0EJ07J06L0F87CJ07FI06I07KF,gT038O03F803F8J0FgI07801CgI0EJ07J03L0E00EJ06FC006I0LF,gT038O03F803F8J0FgI07801CgI0EJ07J018J01C006J067E006I0LF,gT038O03F803F8J0FgI07801CM01MFCM0EJ07J018J01C007J061F806,gT038O03F803F8J0FgI07801CM03MFEM0EJ07J018J018003J0607C0E,gT038O03F803F8J0FW0F8J07801CM0NFEM0EJ07J038J018003J0603FFE,gT038O03F803F8J0FU01FFCJ07801CL01NFEM0EJ0701IF8J018003J0600FFC,gT038O03F803F8J0FU0IFCJ07801CL03NFCM0EJ0701IFK018007J06003F8,gT038O03F803F8J0FT03IFCJ07801CL0KFDQ0EJ0701FFEK01C006J06I04J07KF,gT038S03F8J0FT03IFCJ07801CK01JFER0EJ07J03L0C00EJ06N0LF,gT038S03F8J0FT01IFCJ07801CK07JF8R0EJ07J018K0C002S0LF,gT038S03F8J0FS0607DFCJ07801CK0KFS0EJ07J018gH0LF,gT038S03F8J0FS0F8387CJ07801CJ03JFCS0EJ07J018gH0LF,gT038S03F8J0FR01FC083CJ07801CI0LF838Q0EJ07J018K07CU0FJ0F,gT038S01F8J0FR03FFI0CJ07801CI0LF0FCQ0EJ07J078K0FF06S0FJ0F,gT038g0FR07FF8M07801CI0KFC1FEQ0EJ0701IFK01FF06S0FJ0F,gT038g0FR0IFE18K07801CI0KF87FEQ0EJ0701FFEK01C387S0FJ0F,gT038g0FQ01JF1EK07801CI0KF0FFEQ0EJ07P018183S07J0F,gT038g0FJ0F8K03LF8J07801CI0KFBFFCQ0EJ07P018183S078I0F,gT038g0FJ0F8K03LFCJ07801CI0NF8Q0EJ07P0181C3S078I0F,gT038g0FJ0F8K07LFCJ07801CI0NFR0EJ07007M01C1C7S078I0F,gT038g0FJ0F8K07LFCJ07801CI0MFE00IFM0EJ0700FC1L0C1C7S07C001F,gT038g0FJ0F8K0MFCJ07801CI0MF801IF0CK0EJ0701FC3L0619EK07FL03E003E,gT038J01PF8J0FJ0F8K0MFCJ07801CI0MF001FFE1CK0EJ07018E18K0IFEJ01FFCK03F80FE,gT038J01PF8J0FJ0F8J01MFCJ07801CI0LFE003FFE1EK0EJ07018618J01IFCJ03FFEK01JFC,gT038J01PF8J0FJ0F8J01MFCJ07801CI0LFC007FFC3FK0EJ07018718J01IFK0380FL0JF8,gT038J01PF8J0FJ0F8J01MFCJ07801CI0LFI0IF87F8J0EJ07018318J018M07007L07IF,gT038J01PF8J0FJ0F8J03MFCJ07801CI0KFEI0IF0FFCJ0EJ0701C318S070038K03FFE,gT038J01PF8J0FJ0F8J03MFCJ07801CI0KF8001FFE0FFCJ0EJ0700E738S060018L0FF8,gT038J01PF8J0FJ0F8J03MFCJ07801CI0JFEI03FFE1FFEJ0EJ0700IFT060018,gT038J01PF8J0FJ0TFCJ07801CI07FF8J07FFC3IFJ0EJ0701FFET060018J08,gT038O0FE003F8J0FJ0TFCJ07801CQ07FF87IF8I0EJ0701FF8T060038J0F,gT038O0FE003F8J0FJ0TFCJ07801CU0JF8I0EJ0701W03003K0FC,gT038O0FE003F8J0FJ0TFCJ07801CU0JFCI0EJ07Y07KFI0FF,gT038O0FE003F8J0FJ0TFCJ07801CU0JFCI0EJ07Y07KFI0FFC,gT038O0FE003F8J0FJ0TFCJ07801CU07IF8I0EJ07Y07KFI07FF,gT038O0FE003F8J0FJ0TFCJ07801CQ07FF87IFJ0EJ0701JFEgG01FFE,gT038N01FE003F8J0FJ0F8J03MFCJ07801CI0JFEI03FFC3IFJ0EJ0701JFEgH07FF8,gT038N07FE003F8J0FJ0F8J03MFCJ07801CI0KF8001FFE1FFEJ0EJ07I0EV07FM07FFE,gT038N0FFE003F8J0FJ0F8J03MFCJ07801CI0KFC001FFE0FFCJ0EJ07I07V0FFCL079FF8,gT038M03IF003F8J0FJ0F8J01MFCJ07801CI0LFI0IF0FF8J0EJ07I038T01FFEL0787FE,gT038M07IF003F8J0FJ0F8J01MFCJ07801CI0LF8007FF87F8J0EJ07I0FEM01CK03C67L0780FF8,gT038L01JF007F8J0FJ0F8J01MFCJ07801CI0LFC007FFC3FK0EJ07001EFM01CK03063L07807F8,gT038L03JF80FF8J0FJ0F8K0MFCJ07801CI0MF003FFE1EK0EJ07007878L01CK070638K0781FF8,gT038L07NFK0FJ0F8K0MFCJ07801CI0MF801FFE1CK0EJ0700F018L01CK060618K078FFE,gT038K01IF3KFK0FJ0F8K0MFCJ07801CI0MFC00IF0CK0EJ0701C008L01CK060618K07BFF,gT038K03FFE3JFEK0FJ0F8K07LFCJ07801CI0MFER0EJ07018O01CK060618K07FFC,gT038K0IF81JFEK0FJ0F8K03LFCJ07801CI0NF8Q0EJ07R01CK060618K0IF,gT038J01IF00JFCK0FJ0F8K03LFCJ07801CI0NFCQ0EJ07Y070638J03FFC,gT038J01FFC007IF8K0FQ01LFCJ07801CI0KF1FFCQ0EJ07003F8T03067K0IF,gT038J01FF8003IFL0FR0LFCJ07801CI0KF87FEQ0EJ07007FET0307FK0FF8,gT038J01FFJ0FFEL0FR07KFCJ07801CI0KFC3FEQ0EJ0700F6FV07EK0FE,gT038J01FCJ01EM0FR03KFCJ07801CI0KFE0FEQ0EJ0701C23V078K0F8,gT038J01F8S0FR01KFCJ07801CI0LF07CQ0EJ07018238gH0E,gT038J01ET0FS0KFCJ07801CI07KFCS0EJ07018218,gT038J01CT0FS07JFCJ07801CJ01JFES0EJ07018218,gT038J018T0FS03JFCJ07801CK07JFS0EJ07018218,gT038J01U0FT0JFCJ07801CK03JFCR0EJ07018218,gT038J01U0FT03IFCJ07801CK01KFR0EJ0701C238,gT038J01CT0FU0IFCJ07801CL07NFCM0EJ0701C2F,gT038J01F8S0FU01FFCJ07801CL03NFEM0EJ070083E,gT038J01FES0FV01FCJ07801CM0NFEM0EJ07I03C,gT038J01FFCR0FgI07801CM07MFEM0EJ07V04,gT038J01IFR0FgI07801CM01MFCM0EJ07P01KFC004,gT038J01IFEQ0FgI07801CN0MF8M0EJ07P01KFC007,gT038J01JF8P0FgI07801CgI0EJ0701IF8J01KFC007C,gT038J01JFEP0FgI07801CgI0EJ0701IF8J01C03C1C007F8,gT038K07JFCO0FgI07801CgI0EJ0701IF8J01C03C1CI0FEN07F,gT038K01KFO0FgI07801CgI0EJ07J07K01C03C1CI07FCL03FFE,gT038L03JFEN0FgI07801CgI0EJ07J038J01C03C1CI03FFL07IF,gT038L01KF8M0FgI07801CgI0EJ07J018J01C03C1CI078FEJ01JFC,gT038L01KFEM0FgI07801CgI0EJ07J018J01C03C1CI0781F8I03JFE,gT038L01FBJFCL0FgI07801CgI0EJ07J018J01C03C1CI07807EI03FC0FE,gT038L01F8KFL0FgI07801CgI0EJ07K08J01CI01CI0781FCI07E003F,gT038L01F80JFEK0FgI07801CgI0EJ07P01CI01CI078FEJ07C001F,gT038L01F801JF84I0FgI07801CgI0EJ070180EK01CI01CI03FF8J078I0F8,gT038L01F8003IFC7I0FgI07801CgI0EJ0701C1FK01CI01CI07FCK078I078,gT038L01F8I07FFC7800FgI07801CgI0EJ0701C3F8S01FEL0FJ078,gT038L01F8I0IFC7E00FgI07801CgI0EJ07018318M0FK07F8L0FJ078,gT038L01F8007IFC7F80F8gH07801EgH01EJ07018618L0IFJ07CM0FJ078,gT038L01F803JF07FC0gKF801gJFEJ07018618K01IFCI07N0FJ078,gT038L01F83JF803FC0gKF801gJFEJ0701CE18K07IFER078I078,gT038L01F9JFE001FC0gKF801gJFEJ0701FC38K07C01FR078I078,gT038L01LF8I07C05BgHFB8015gHFE6J0700F81L0FI078007KFI078I0F8,gT038L01KFCJ03ChX07003N0EI038007KFI07CI0F,gT038L01KFK01ChX07P01EI03C003KFI03F003F,gT038L07JFCL0ChX07P01CI01C003003K03FE1FE,gT038K01JFEiL07P01CI01C0060018J01JFE,gT038K0KF8iL0701JFEI01CI01C0060018K0JFC,gT038J01JFEiM0701JFEI01CI01C0060018K07IF8,gT038J01JFiN07J03K01CI01C0060038K01FFE,gT038J01IFCiN07J038K0EI01C0070038L03F,gT038J01IFiO07J018K0EI038003007,gT038J01FF8iO07J018K0FI018003C1F,gT038J01FES0gKF801gJFEJ07J018K06M01FFE,gT038J01FT0gKF801gJFEJ07J038T0FFCK0LF,gT038J01CT0gKF801gJFEJ07J078T01FL0LF,gT038J01U0gKF801gJFEJ0701IFN0F8S0LF,gT038g0FgI07801EgI0EJ0701FFEL01IF8R0KFE,gT038g0FgI07801CgI0EJ07Q07IFEU01FC,gT038g0FgI07801CgI0EJ07Q0KFI07IF8M03F8,gT038g0FgI07801CgI0EJ07Q0FI078007IF8M07E,gT038N01FFCN0FgI07801CgI0EJ07P01CI01C007IF8M0FC,gT038M01JF8M0FgI07801CgI0EJ07007FF8J018I01CK0EM01F8,gT038M07JFEM0FgI07801CgI0EJ0700IF8J018J0CK07M03F,gT038L01LF8L0FgI07801CgI0EJ0701EM018J0CK03M07E,gT038L07LFCL0FgI07801CgI0EJ07018M01CJ0CK018L0FC,gT038L0MFEL0FgI07801CgI0EJ07018M01CI01CK018K01F8,gT038K01NFL0FgI07801CgI0EJ07018N0FI078K038K07F,gT038K03NF8K0FgI07801CgI0EJ07018N07JF8K018K0FE,gT038K03IF01IFCK0FgI07801CgI0EJ07018N03JFR01KF,gT038K07FF8001FFEK0FgI07801CgI0EJ0700CO0IFCL018J03KF,gT038K07FEJ07FEK0FQ07CP07801CgI0EJ0701IF8V018J07KF,gT038K0FFCJ03FFK0FQ03FCO07801CI0F8X0EJ0701IF8V0184I0LF,gT038K0FF8J01FFK0FQ03FF8N07801C001F8X0EJ0701IF8S07IF8EI0LF,gT038J01FFL0FF8J0FQ01FFEN07801C001F8X0EJ07Y07IF9E,gT038J01FEL07F8J0FQ01IF8M07801C001F8X0EJ07T01J04I08C,gT038J01FEL03F8J0FR0IFEM07801C001F8X0EJ07T038,gT038J01FCL03F8J0FR0JFM07801C001F8X0EJ0701JFEM01C,gT038J03FCL03FCJ0FR0JF8L07801C001F8X0EJ0701JFEM01C,gT038J03FCL01FCJ0FR0JFCL07801C001F8P03M0EJ0700JFEN0EJ0KFI0LF,gT038J03F8L01FCJ0FR0JFEL07801C001F8P03CL0EJ0701C03K01KFI03KFI0LF,gT038J03F8L01FCJ0FQ01KFL07801C001F8P03EL0EJ07018018J01KF8003KFI0LF,gT038J03F8L01FCJ0FQ01KF8K07801C001F8P03F8K0EJ07018018J01KFC0078M0LF,gT038J03F8L01FCJ0FQ03KFCK07801C001F87QFEK0EJ07018018P04007N0LF,gT038J03F800FE001FCJ0FQ07KFEK07801C001F87RF8J0EJ07018018S06N0F,gT038J03F800FE001FCJ0FQ07KFEK07801C001F87RFCJ0EJ0701C038gH0F,gT038J03F800FE001FCJ0FQ07LFK07801C001F87SFJ0EJ0701C07gI0F,gT038J01FC00FE001FCJ0FQ03LFK07801C001F87SF8I0EJ0700IFgI0F,gT038J01FC00FE003FCJ0FQ01LF8J07801C001F87SFJ0EJ07007FEgI0F,gT038J01FE00FE003F8J0FQ01LF8J07801C001F87RFEJ0EJ07001F8gI0F,gT038J01KFE003F8J0FJ0F8L0LFCJ07801C001F87RF8J0EJ07R0IFS0F,gT038K0KFE007F8J0FI01FCL0LFCJ07801C001F87QFEK0EJ07Q03IFER0F,gT038K0KFE007F8J0FI03FCL0LFCJ07801C001F87OF7FCK0EJ07Q07JFR0F,gT038K0KFE007FK0FI03F8L0LFEJ07801C001F8P03FL0EJ07Q0F80078Q0F,gT038K07JFE001FK0FI07FM0LFEJ07801C001F8P03CL0EJ0701CM01CI038Q0F,gT038K07JFEI0EK0FI07EM0LFEJ07801C001F8P038L0EJ0701CM01CI01CQ0F,gT038K03JFEO0FI07EL01LFEJ07801C001F8P02M0EJ0701CM018J0CQ0F,gT038K03JFEO0FI07EL01MFJ07801C001F8X0EJ07008M018J0C,gT038K01JFCO0FI07EL03MFJ07801C001F8X0EJ07P018J0C,gT038g0FI07FL07MFJ07801C001F8X0EJ07P01CI01CL0E,gT038g0FI07UFJ07801C001F8X0EJ07Q0FI038L07J0LF,gT038g0FI03UFJ07801C001F8X0EJ07Q07F87F8L07J0LF,gT038g0FI03UFEI07801C001F8X0EJ07J018K03JFM038I0LF,gT038g0FI01VF8007801C001F8X0EJ07J018L0IFCI07JFCI0LF,gT038g0FJ0VFI07801C001F8X0EJ0700JFL01FCJ07JFEI0LF,gT038g0FJ07TFCI07801C001F8X0EJ0701JF8R07JFE,gT038g0FJ03TF8I07801C001F8X0EJ0701C018,gT038J01PF8J0FQ0NFJ07801C001F8X0EJ07018018J018I03,gT038J01PF8J0FQ07MFJ07801C001F8X0EJ07018018J01CI038,gT038J01PF8J0FQ03MFJ07801C001F8X0EJ07018018J01FI018,gT038J01PF8J0FQ01MFJ07801C001F8P02M0EJ07018M01F8001C,gT038J01PF8J0FQ01MFJ07801C001F8P038L0EJ07P01FEI0CQ0LF,gT038J01PF8J0FR0MFJ07801C001F8P03EL0EJ07001F8K01BFI0CQ0LF,gT038J01PF8J0FR0MFJ07801C001F8P03FL0EJ07007FEK018FC00CQ0LF,gT038J01PF8J0FR0LFEJ07801C001F87QFCK0EJ0700IFK0187E00CJ07L0KFE,gT038g0FR0LFEJ07801C001F87RFK0EJ0701E27K0181F81CJ07L07JFC,gT038g0FR0LFEJ07801C001F87RF8J0EJ0701C238J01807FF8J07O03F8,gT038g0FQ01LFCJ07801C001F87RFEJ0EJ07018218J01803FF8J07O07F,gT038g0FQ01LFCJ07801C001F87SF8I0EJ07018218J01800FFK07O0FE,gT038g0FQ03LFCJ07801C001F87SF8I0EJ07018218J018I08K07N01FC,gT038g0FQ03LF8J07801C001F87SFJ0EJ07018218J018O06N03F,gT038g0FQ07LF8J07801C001F87RFCJ0EJ07018238gJ07E,gT038g0FQ0MFK07801C001F87RFK0EJ0701C27gK0FC,gT038g0FQ07LFK07801C001F87QFEK0EJ070083FgJ01F8,gT038g0FQ03KFEK07801C001F8P03F8K0EJ07I03EM0IFT03F,gT038J01PF8J0FQ01KFCK07801C001F8P03EL0EJ07Q03IFES07E,gT038J01PF8J0FQ01KFCK07801C001F8P03CL0EJ07Q0KFM0EJ01FEIF,gT038J01PF8J0FR0KF8K07801C001F8P03M0EJ07I0EM0F80078L07J03KF,gT038J01PF8J0FR0KFL07801C001F8X0EJ07003FCK01CI038L07J07KF,gT038J01PF8J0FR0JFEL07801C001F8X0EJ0700FFEK01CI01CL038I0LF,gT038J01PF8J0FR0JFCL07801C001F8X0EJ0700E0FK018J0C007JFCI0LF,gT038J01PF8J0FR0JFM07801C001F8X0EJ0701C038J018J0C007JFC,gT038J01PF8J0FR0IFEM07801C001F8X0EJ07018038J01CJ0C007JFE,gT038J01FCS0FQ01IF8M07801C001F8X0EJ07018018J01CI01C,gT038J01FCS0FQ01FFEN07801C001F8X0EJ07018018K0FI038,gT038J01FCS0FQ03FF8N07801CgI0EJ07018018K07F87F8,gT038J01FCS0FQ07FCO07801CgI0EJ07018018K03JFR07KF,gT038J01FCS0FQ07CP07801CgI0EJ0701C038L0IFCR0LF,gT038J01FCS0FgI07801CgI0EJ0700C03N0FCS0LF,gT038J01FCS0FgI07801CgI0EJ07gN0LF,gT038J01FCS0FgI07801CgI0EJ07R06Q06I0LF,gT038J01FCS0FgI07801CgI0EJ07R078P06I0F01E0F,gT038J01FCS0FgI07801CgI0EJ0701JFEK07CK04J06I0F01E0F,gT038J01FCS0FgI07801CgI0EJ0701JFEK07EK078I06I0F01E0F,gT038J01FCS0FgI07801CgI0EJ0701JFEK06FK07FI06I0F01E0F,gT038J01FCS0FgI07801CgI0EJ07J03M063CJ03FC006I0F01E0F,gT038J01FCS0FgI07801CgI0EJ07J018L061EK07F006I0F01E0F,gT038J01FCS0FgI07801CgI0EJ07J018L060FK01FE06I0F01E0F,gT038J01FCS0FgI07801EgI0EJ07J018L06078K03F86I0F01E0F,gT038J01FCS0gKF801gJFEJ07J018L0601CL0FE6I0F01E0F,gT038J01FCS0gKF801gJFEJ07J038L0701FL03FEI0FJ0F,gT038J01FCS0gKF801gJFEJ0701IF8J01KF8L0FEI0FJ0F,gT038J01FCS0gKF801gJFEJ0701IFK01KFCL03EI0FJ0F,gT038iW0701FFCK0107I04M0EI0FJ07,gT038iW07R06,:gT038iW07,::::::,:::::::::::::::^FS\n"
//                + "\n"
//                + "^FX Informacion de envio.\n"
//                + "^CF0," + String.valueOf(iE_alturaFuente) + "\n"
//                + informacionEnvio + "\n"
//                + "\n"
//                + "^FX Codigo de barras (Numero de orden).\n"
//                + "^FO" + String.valueOf(cB_posXY.x) + "," + String.valueOf(cB_posXY.y) + "^BY3\n"
//                + "^BER," + String.valueOf(cB_altura) + ",Y,N\n"
//                + "^FD" + String.valueOf(cB_codigo) + "^FS"
//                + "\n"
//                + "^FX Numero de orden y fecha de envio.\n"
//                + "^CF0," + String.valueOf(nO_alturaFuente) + "\n"
//                + "^AOR^FO" + String.valueOf(nO_posXY.x - nO_interlineado * 0) + "," + String.valueOf(nO_posXY.y) + "^FDOrden No: " + String.valueOf(nO_codigo) + "^FS\n"
//                + "^AOR^FO" + String.valueOf(nO_posXY.x - nO_interlineado * 1) + "," + String.valueOf(nO_posXY.y) + "^FDFecha: " + getFecha() + "^FS"
//                + "^XZ";
        String plantilla = "^XA\n"
                + "^FX Plantilla (IMAGEN).\n"
                + "^FO" + String.valueOf(posInicialXY.x) + "," + String.valueOf(posInicialXY.y) + "^GFA,61940,61940,76,,::::::::::::::gT018iW03,gT038iW07,:::::gT038iW07R03F,gT038iP0KFC07Q07FFC,gT038iP0KFC07P07IFE,gT038iP0KFC07O07JFE00FF8,gT038iP0KFC07N07IF0FF0IFC,gT038iP0KFC07M03IF003F7IFE,gT038iP0KFC07M0IFI01LF,gT038iW07L03FFK0LF8,gT038iW07L0FF8K0IF81F8,gT038iW07K03FCL0FFC00FC,gT038iP0JF8007K07FM07CI0FC,gT038iP0JF8007K0FCM078I07E,gT038iP0JF8007K0F8M07CI07E,gT038iP0JF8007J01FN07CI03E,gT038iS0EI07J01EN07CI03F,gT038iS07I07J03CN07CI03F,gT038iS078007J03CN03CI01F,gT038iP0JF8007J03CN03CI01F,gT038iP0JF8007J038N03CI01F8,gT038iP0JF8007J078N03CI01F8P018,gT038iP0JFI07J078N03EJ0F8P07E,gT038iP0IFCI07J078N03EJ0F8P0FF,gT038iW07J078N03EJ0F8O01FF8,gT038iW07J078N03EJ0FCO01FF8,gT038iW07J07O03EJ07CO01FF8,gT038iS078007J07O03EJ07CO01FF8,:gT038iP0KF807J07O01EJ07CP0FF8,gT038iP0KFC07J07O01EJ07EM0180FF,gT038iP0KFC07J07O01EJ03EM0E003E,gT038iP0KFC07J07O01EJ03EL0F,gT038iS07BC07J07O01EJ03EK0F8,gT038iS079C07J07O01EJ03EJ0FE,gT038iW07J07O01EJ03EI07F,gT038iQ01CJ07J07O01EJ03F007F8,gT038iP03FFCI07J07O01EJ03F07FE,gT038iP07IFI07J07O01EJ03F3FF,gT038iP07IFI07J07O01EJ03IF8,gT038iP0JF8007J07O01EJ01FFE,gT038iP0F0078007J07I03CJ01EJ01FF,gT038iP0F0078007J07I0FFJ01EJ01FC,gT038iP0F0078007J07001FF8I01EJ01F,gT038iP0JF8007J07001FF8I01EJ01F,gT038iP07IFI07J07003FFCI01EJ01F8,:gT038iP03FFEI07J07003FFCI01EJ01F8,gT038iQ07FJ07J07003FFCI01EJ01F8,gT038iW07J07801FF8I01EJ01F8,gT038iW07J07801FF8I03EJ01F8,gT038iW07J07800FFJ03EJ01F8,gT038iP0JF8007J078007EJ03EJ01F8,gT038iP0JF8007J038N03EJ01F8,gT038iP0JF8007J03CN03EK0F8,:gT038iP0IFEI07J03EN03EK0FC,gT038iR01FI07J01EN03CK0FC,gT038iS0F8007J01FN03CK0FC,gT038iS0F8007K0F8M03CK0FC,gT038iW07K07EM07CK0FC,gT038iW07K03F8L07CK0FC,gT038iW07K01FFL07CK0FC,gT038iP0JF8007L0IFK0FCK0FC,gT038iP0JF8007L03IFC001F8K0FC,gT038iP0JF8007M0NF8K0FC,gT038iP0JF8007M01MF8K0FC,gT038iS0FI07O0LFL0FC,gT038iS07I07P03JFL0FC,gT038iS078007T07L0FC,gT038iP0JF8007T07L0FC,:gT038iP0JFI07T07L0FC,gT038iP0IFEI07T07L0FC,gT038iS0EI07T07L0FC,gT038iS07I07T07L0FC,gT038iS078007T07L0FC,gT038iP0JF8007T07L0FC,:gT038iP0JFI07T07L0FC,gT038iP0IFEI07T07L0FC,gT038iW07T07L0FC,:gT038iW07R07FFL0FC,gT038iW07P0KFL0FC,gT038iP03F0CI07N03LFL0FC,gT038iP07F0EI07M03MF8K0FC,gT038iP0FF8FI07L01NF8K0FC,gT038iP0FFCF8007L07IFI01F8K0FC,gT038iP0FBCF8007L0FFEK0FCK0FC,gT038iP0F1C78007K03FEL07CK0FC,gT038iP070E78007K07FM07CK0FC,gT038iP078E78007K0FCM07CK0FC,gT038iP0JF8007K0F8M03CK0FC,gT038iP0JF8007J01FN03CK0FC,gT038iP0JFI07J01EN03CK0FC,gT038iP0IFEI07J03EN03EK0FC,gT038iP0EFF8I07J03CN03EK0F8,gT038iW07J03CN03EJ01F8,gT038iW07J078N03EJ01F8,gT038iP01FFCI07J0780078J03EJ01F8,gT038iP03FFEI07J078007CJ03EJ01F8,gT038iP07IFI07J078003EJ03EJ01F8,gT038iP0JF8007J078001EJ01EJ01F8,gT038iP0F80F8007J07J0FJ01EJ01F8,gT038iP0F0078007J07J0FJ01EJ01F8,:gT038iP0FE3F8007J07I01EJ01EJ01F8,gT038iP0FE3F8007J07I03EJ01EJ01F,gT038iP07E3FI07J07I07CJ01EJ01F,gT038iP03E3EI07J07I078J01EJ01F,gT038iP01E3CI07J07I04K01EJ01F,gT038iW07J07O01EJ01FC,gT038iW07J07O01EJ03FE,gT038iW07J07O01EJ03FF,gT038iW07J07O01EJ03FF8,gT038iP0JF9E07J07O01EJ03E7C,gT038iP0JFBE07J07O01EJ03E1F,gT038iP0JF9E07J07O01EJ03E0F8,gT038iP0JFBE07J07O01EJ03E03C,gT038iP0JF9E07J07O01EJ03E01E,gT038iW07J07O01EJ07E007,gT038iW07J07O01EJ07C0038,gT038iQ0FF8I07J07O01EJ07CI0E,gT038iP03FFEI07J07O03EJ07CI07,gT038iP07IFI07J07O03EJ07CI018,gT038iP0JF8007J07O03EJ07CJ0C,gT038iP0JF8007J078N03EJ0FCJ06,gT038iP0F007B007J078N03EJ0F8J018,gT038iP0F0079C07J078N03EJ0F8K0C,gT038iP0F80F8C07J078N03EJ0F8K02,gT038iP0JF8C07J038N03CI01F8K01,gT038iP07IF0407J038N03CI01F8,gT038iP03FFEI07J03CN03CI01FO0E,gT038iP01FFCI07J03CN03CI03FN03F,gT038iW07J03CN07CI03FN07F8,gT038iW07J01EN07CI03EN0FFC,gT038iW07J01FN07CI03EN0FFC,gT038iP0JF8007K0F8M07CI07EN0FFC,gT038iP0JF8007K0FEM078I07EN0FFC,gT038iP0JF8007K03F8L0FEI0FCN0FFC,gT038iP0JF8007K01FEL0FFC00FCN07FC,gT038iP0JF8007L0FFCK0IFC1F8N07F8,gT038iS0FI07L03FF8I01LF8N01F,gT038iS07I07M0IF8001LF,gT038iS078007M01IF803F3IFE,gT038iP0JF8007N03IFDFF07FFC,gT038iP0JF8007O03JFE007F,gT038iP0JF8007P03IFC,gT038iP0JFI07Q03FF8,gT038iP0IFJ07R01E,gT038iW07,::::::::::gT038iP01FF8I07,gT038iP07IFI07J03TFC003C,gT038iP0JFI07J03TFC003FF,gT038iP0JF8007J03TFC003IF8,gT038iP0JF8007J03TFC003JFE,gT038iP0F0078007J03TFC003LF,gT038iP07007I07J03TFC001MFC,gT038iP0780FI07J03TFCJ0MFE,gT038iP0KFC07J03TFCK07KFE,gT038iP0KFC07J03TFCL01JFE,gT038iP0KFC07J03TFCM07IFE,gT038iP0KFC07J03TFCL03JF,gT038iP0KFC07Q07FCQ01JF8,gT038iW07Q07FCQ0JF8,gT038iW07Q07FCP07IFC,gT038iW07Q07FCO07IFC,gT038iP01FFCI07Q07FCN03IFE,gT038iP07FFEI07Q07FCN03FFE,gT038iP07IFI07Q07FCN03IF8,gT038iP0JF8007Q07FCO0JF8,gT038iP0F9EF8007Q07FCO01JF8,gT038iP0F0E78007Q07FCP03JF,gT038iP0F0E78007Q07FCQ07JF,gT038iP0FCEF8007Q07FCR0JFE,gT038iP0FCFF8007Q07FCR01JFE,gT038iP07CFFI07Q07FCS07IFE,gT038iP03CFFI07Q07FCR0KFE,gT038iP01CFCI07Q07FCP03LFE,gT038iW07Q07FCO0NF,gT038iW07Q07FCN03LFC,gT038iW07Q07FCN03KF,gT038iW07Q07FCN03IFE,gT038iW07Q07FCN03FF8,gT038iW07Q07FCN03F,gT038iW07Q07FC,gT038iW07Q07FE,gT038iW07J03TFCJ0F8,gT038iW07J03TFCI07FF,gT038iQ0FF8I07J03TFCI0IF8,gT038iP03FFEI07J03TFC001IFC078,gT038iP07IFI07J03TFC001IFC0F8,gT038iP0JFI07J03TFC003IFE0F8,gT038iP0JF8007J03TFC003F07E0FC,gT038iP0F0E78007J03TFC003E03F0FC,gT038iP0F0E78007J03TFC003E01F07C,:gT038iP0FCFF8007gH03E01F07C,gT038iP07CFFI07gH03E01F0FC,gT038iP07CFFI07gH01F01F0FC,gT038iP03CFEI07gH01F81F1F8,gT038iR0EJ07gI0FE1F7F8,gT038iW07gI0LF8,gT038iW07gH01LF,gT038iW07gH03KFE,gT038iP0JF8007gH03KFC,gT038iP0JF8007gH03KF,gT038iP0JF8007gH03F,gT038iP0JF8007M03QFC0018,gT038iP0JF8007L01RFC,gT038iS0FI07L07RFC,gT038iS07I07L0SFC,gT038iS078007K01SFC003OF,gT038iP0JF8007K03SFC003OF,gT038iP0JF8007K07SFC003OF,gT038iP0JF8007K0TFC003OF,gT038iP0JFI07K0TFC003OF8,gT038iP0IFJ07J01TFCK0FF,gT038iW07J01JFV07F8,gT038iW07J03IFW03FC,gT038iS078007J03FFCW03FE,gT038iQ01FF8007J07FF8W0IF8,gT038iP01IF8007J07FFW03IFC,gT038iP0JF8007J07FFW07IFE,gT038iP0IFCI07J07FEV01FFCFF,gT038iP0FEK07J07FEV07FF87F8,gT038iP0FFCJ07J07FCU01FFE03F8,gT038iP0JF8007J07FCU03FF800F8,gT038iP07IF8007J07FCU03FFI078,gT038iQ03FF8007J07FCU03FCI038,gT038iR03F8007J07FCU03FJ018,gT038iS018007J07FCU03CK08,gT038iW07J07FCU038,gT038iW07J07FE,gT038iW07J07FEW03FF8,gT038iP0JF9007J07FEW0IFE,gT038iP0JFB807J07FFV03JF8,gT038iP0JF9C07J07FFV07JFC,gT038iP0JF8C07J03FF8U0KFE,gT038iP08I08407J03FFCT01LF,gT038iU0407J03FFET01FE3E7F8,gT038iW07J01IFCS03F83E1F8,gT038iP01FFCI07J01TFC003F03E0F8,gT038iP07FFEI07K0TFC003F03E0FC,gT038iP07IFI07K0TFC003E03E0FC,gT038iP0JF8007K07SFC003E03E07C,gT038iP0F80F8007K03SFC003E03E07C,gT038iP0F0078007K01SFC003E03E0FC,gT038iP0F0078007L0SFC003E03E0FC,gT038iP0JF8007L07RFC003F03E1F8,gT038iP0JF8007L01RFC003F03E3F8,gT038iP07IFI07M07QFC001F83EFF,gT038iP03FFEI07N07PFC001F83IF,gT038iQ0FF8I07gI0E03FFE,gT038iW07gK03FFC,gT038iW07gK03FF8,gT038iW07gK03FC,gT038iW07,gT038iP0F80F8007,:gT038iP0F80F8007gH03LF8,::gT038iW07J03TFC003LF8,:gT038iW07J03TFC001LF8,gT038iW07J03TFCM07F,gT038iW07J03TFCM01F8,gT038iW07J03TFCN0F8,gT038iW07J03TFCN0FC,gT038iW07J03TFCN07C,:gT038iW07J03TFCN0FC,:gT038iW07J03FEJ01FEI07FCN0FC,gT038iW07J03FCJ01FEI07FCN018,gT038iW07J03FCJ01FEI07FC,::gT038iW07J03FCJ01FEI03FCN0301C,gT038iW07J03FCJ01FEI07FCN0F83F,gT038iW07J03FCJ01FEI07FCN07EFF,gT038iW07J03FEJ03FEI07FCN03IF,gT038iW07J03FEJ03FEI07FCN01IF,gT038iW07J03FEJ03FEI07FCO0IF,gT038iW07J03FEJ03FFI07FCO03FE,gT038iW07J03FEJ03FFI0FFCP0FC,gT038iW07J03FFJ07FF801FFCI08I0F8,gT038iW07J03FFJ07FFE03FFC001F003FE,gT038iW07J01FF8I0NF8001F807FF,gT038iW07J01FFCI0NF8003F00IF8,gT038iW07J01FFE003NFI03F01IF8,gT038iW07J01IFC0OFI03E01IFC,gT038iW07K0MFEKFEI03E03F8FC,gT038iW07K0MFE7JFEI03E03F07C,gT038iW07K07LFC3JFCI03E07E07C,gT038iW07K03LFC3JF8I03E0FE07C,gT038iW07K03LF81JFJ03F0FC07C,gT038iW07K01LF807FFCJ03IFC0FC,gT038iW07L0LF001FFK01IF80F8,gT038iW07L07JFCP01IF81F8,gT038iW07J0F03JF8Q0IF0078,gT038iW07I01080IFER07FE,gT038iW07I02FC01FFS01F8,gT038iW07I029C,gT038iW07I028C,gT038iW07I0108,gT038iW07I01F8,gT038iW07,::::::::::::::::::::::::gT038iW0703NFE0LFC007FE07NF8,gT038iW0703NFE0LFC007FE07NFC,gT038iW0703NFE0LFC007FE07NF8,:gT038iW0703NFE0LFE007FE07NF8,gT038iW0703FL07EM01JFE07EL0F8,gT038iW0703FL07EM01JFE07CL0F8,gT038iW0703FL07EM03JFE07CL0F8,::gT038iW0703FL07EL07JFBE07CL0F8,gT038iW0703F07IF07E0F8I07EI03E07C1IFE0F8,:::gT038iW0703F07IF07EL07CI03E07C1IFE0F8,gT038iW0703F07IF07EK0F800F83E07C1IFE0F8,::::gT038iW0703F07IF07E0FFE007FF003E07C1IFE0F8,::::gT038iW0703FL07E007E0F83FK07CL0F8,gT038iW0703FL07E007E0F81FK07CL0F8,:::gT038iW0703NFE07C1FJ0FJ07NF8,gT038iW0703NFE0F81F07C0F83E07NF8,::gT038iW0703NFE0F81F07C0F83E07NFC,gT038iW0701NFC0481F07C0F83E07NF8,gT038iW07V0FFC007FE,::::gT038iW0703LF03FF001IFC0IFE07FE07C1F,gT038iW0703LF07FF001IFC0IFE07FE07C1F,:gT038iW0703LF03FF001IFC0IFE07FE07C1F,gT038iW0703LF07FF001IFC0IFE07FE07C1F,gT038iW0703NFE0F801MFEK07JF8,gT038iW0703E07C1IFE0F800MFEK07JF8,:::gT038iW0701FFN07C07MFE0200107F7F8,gT038iW07001F8N07IF83F003E07IF03E,:::gT038iW07I0FO07IF83F001E07IF07F,gT038iW07L01IFEL07IF8M07IF,::::gT038iW0703FF03E003E0FFC0F800F81IFC1F801F,gT038iW0703FF83E003E0FFE0F800F83IFC1F801F,:gT038iW0703FF83E003E0FFC0F800F83IFC1F801F,gT038iW0703FF83E003E0FFE0F800F83IFC1F801F,gT038iW07011IFEK047IF8J011F83FF8I0F8,gT038iW07001IFEL07IF8L0F83FFJ0F8,:::gT038iW07I0IFEM03FF8N03F1,gT038iW0703E0FFE0FC00F81FF83F003E07FF,:::gT038iW0703E0IF0FC00F81FF83F003F07FF,gT038iW07001LFC1F001F07IF83FF83F07C1F,:::gT038iW07001LFC1F001F07IF83FF83F07C1F8,gT038iW07001F87NFE0JF07C0KF801FF8,gT038iW07001F83NFE0JF07C0KF801FF8,gT038iW07001F87NFE0JF07C0KF801FF8,gT038iW07001F83NFE0JF07C0KF801FF8,gT038iW07001F87NFE0JF07C0KF801FF8,gT038iW0701DPFCI07FF07FE,gT038iW0703LFJ0FCI07FF07FE,:::gT038iW0703LFJ0FCI07EE07FE,gT038iW0703FF83FF03E0FFE007E0F8I07NF8,::::gT038iW07001FFC1FJ0LFE007FE07CL0F8,:::gT038iW07001FFC1F8I0LFE007FE07CL0F8,gT038iW0703FF83MFCI07E0F8I07C0IFE0F8,gT038iW0703FF03MFCI07E0F8I07C1IFE0F8,::gT038iW0703FF83MFCI07E0F8I07C1IFE0F8,gT038iW0703F003MFCI07FFK07C1IFE0F8,gT038iW0703E003FF8I0FC1F07FF003E07C1IFE0F8,gT038iW0703F003FF8I0FC1F07FF003E07C1IFE0F8,::gT038iW0703F003FF8I0FC1KFE01207C1IFE0F8,gT038iW0703FI01F801FFC1IFE0F8I07C1IFE0F8,:::gT038iW0703FI01F803FFC3IFE1F8I07C0IFE0F8,gT038iW0703F003E003SFE07CL0F8,::::gT038iW0703LF03F0FC3F07E1F8I07NF8,gT038iW0703LF03E0FC1F07E0F8I07NF8,:::gT038iW07,:::::::::::::::::::::::gT038iW07L07,gT038iW07K03FU0EP07,gT038iW07J03FCT07EP0F,gT038iW07I01FEM01CK03FCP0F,gT038iW07I0FEN01C4I01FCQ0F,gT038iW07001F8K01IFCEI0FER0F,gT038iW07I07EK01IFCEI07CR0F,gT038iW07J0FCO04I01FR0F,gT038iW07J01F8S07EQ0F,gT038iW07K03FS01F8P0F,gT038iW07K0FET07EK0LF,gT038iW07J07FJ01IF8L0F8K0LF,gT038iW07I01F8J01IFCK07EL0LF,gT038iW07I0FCK01IFK01FM0LF,gT038iW07001F8N03K07CM0LF,gT038iW07I07F8M018J0FER0F,gT038iW07J0FFM018J01FCQ0F,gT038iW07K0FFL01CK03F8P0F,gT038iW07K01FL01CL0FEP0F,gT038iW07L03L038M0EP0F,gT038iW07P01IF8X0F,gT038iW07P01IFY0F,gT038iW07003JF8001FFEM01EP0F,gT038iW07003JF8S0FEP0F,gT038iW07K04T03F8P07,gT038iW07K02S01FC,gT038iW07K02M01CJ0FE,gT038iW07K03M01CJ07CM0LF,gT038iW07K07J01JF8I01F8L0LF,gT038iW0700101EJ01JFCJ03EL0LF,gT038iW07003FFCM01CEK0FCK0LF,gT038iW07001FFN01C7K07EK0LF,gT038iW07S01C7J01F8,gT038iW07U07J07C,gT038iW07I06Q02I01F,gT038iW07I0F84S07C,gT038iW07001FC6K03FCK07F,gT038iW070030C2K07FEK01FEL0LF,gT038iW07003063K0F8FL03F8K0LF,gT038iW07003063J01C038L07EK0LF,gT038iW07001063J01C018M0EK0LF,gT038iW07001866J01801CS0LF,gT038iW07I0FFEJ01801CM02K0F01E0F,gT038iW07001FFCJ01801CL01EK0F01E0F,gT038iW07003M01C018L0FEK0F01E0F,gT038iW07Q0E078K07F8K0F01E0F,gT038iW07Q07FFK03FCL0F01E0F,gT038iW07K02K03FEK0FCM0F01E0F,gT038iW07K03L07L07CM0F01E0F,gT038iW07I0IFER01F8L0F01E0F,gT038iW07001IFES03EL0F01E0F,gT038iW07001C03K01FEM0FCK0FJ0F,gT038iW07003003K07FF8L07EK0FJ0F,gT038iW07003003J01E01CK01F8K0FJ0F,gT038iW07003003J018006K07CL07J07,gT038iW07001M03I03J01F,gT038iW07P060E018I0FC,gT038iW07K08J061F118I07F,gT038iW0700183EJ0433188J0FE,gT038iW0700187EJ0431988J01FCK0LF,gT038g0gKF801gJFEJ07003063J0431988K03EK0LF,gT038J01PF8J0gKF801gJFEJ070030C3J0411B08L0EK0LF,gT038J01PF8J0gKF801gJFEJ070011C3J041FF08R0KFE,gT038J01PF8J0F8gH07801EgH01EJ07001F86J0638018U01FC,gT038J01PF8J0FgI07801CgI0EJ07001F86J0630018U03F8,gT038J01PF8J0FgI07801CgI0EJ07I06L033003J07Q07E,gT038J01PF8J0FgI07801CgI0EJ07P02300EJ0FQ0FC,gT038J01PF8J0FgI07801CgI0EJ07003N0183CJ0FP01F8,gT038J01PF8J0FgI07801CgI0EJ07003EN0FF8J06P03F,gT038O03F803F8J0FgI07801CgI0EJ07001F8M03CV07E,gT038O03F803F8J0FgI07801CgI0EJ07I03FgK0FC,gT038O03F803F8J0FgI07801CgI0EJ07I03FCgI01F8,gT038O03F803F8J0FgI07801CgI0EJ07I039F8I01IF8T07F,gT038O03F803F8J0FgI07801CgI0EJ07I0381FI01IFCT0FE,gT038O03F803F8J0FgI07801CgI0EJ07I0381FI01IFK0IFEK01KF,gT038O03F803F8J0FgI07801CgI0EJ07I038F8L03K0IFEK03KF,gT038O03F803F8J0FgI07801CgI0EJ07I03FEM018L038K07KF,gT038O03F803F8J0FgI07801CgI0EJ07I03FN018M0CK0LF,gT038O03F803F8J0FgI07801CgI0EJ07001FCN01CM0CK0LF,gT038O03F803F8J0FgI07801CM01MFCM0EJ07003EO01CM0E,gT038O03F803F8J0FgI07801CM03MFEM0EJ07003P038M0E,gT038O03F803F8J0FW0F8J07801CM0NFEM0EJ07P01IF8M0E,gT038O03F803F8J0FU01FFCJ07801CL01NFEM0EJ07P01IFK0IFC,gT038O03F803F8J0FU0IFCJ07801CL03NFCM0EJ0707JFM03K0IFC,gT038O03F803F8J0FT03IFCJ07801CL0KFDQ0EJ0707JFM018J0IF8K07KF,gT038S03F8J0FT03IFCJ07801CK01JFER0EJ07001806M018L01CK0LF,gT038S03F8J0FT01IFCJ07801CK07JF8R0EJ07001002M01CM0CK0LF,gT038S03F8J0FS0607DFCJ07801CK0KFS0EJ07003003M01CM0EK0LF,gT038S03F8J0FS0F8387CJ07801CJ03JFCS0EJ07003003M038M0EK0LF,gT038S03F8J0FR01FC083CJ07801CI0LF838Q0EJ07001003J01IF8M0EK0FJ0F,gT038S01F8J0FR03FFI0CJ07801CI0LF0FCQ0EJ07001806J01IFM01CK0FJ0F,gT038g0FR07FF8M07801CI0KFC1FEQ0EJ07001E0EJ01FFEK0IFCK0FJ0F,gT038g0FR0IFE18K07801CI0KF87FEQ0EJ07I0FFCS0IF8K0FJ0F,gT038g0FQ01JF1EK07801CI0KF0FFEQ0EJ07I07F8gH07J0F,gT038g0FJ0F8K03LF8J07801CI0KFBFFCQ0EJ07gN078I0F,gT038g0FJ0F8K03LFCJ07801CI0NF8Q0EJ07Q07CU078I0F,gT038g0FJ0F8K07LFCJ07801CI0NFR0EJ07Q0FE38J01CM078I0F,gT038g0FJ0F8K07LFCJ07801CI0MFE00IFM0EJ0707JFJ01CE38J07E08K07C001F,gT038g0FJ0F8K0MFCJ07801CI0MF801IF0CK0EJ0707JFJ018718J07F1CK03E003E,gT038J01PF8J0FJ0F8K0MFCJ07801CI0MF001FFE1CK0EJ07001806J01831CJ0E38CK03F80FE,gT038J01PF8J0FJ0F8J01MFCJ07801CI0LFE003FFE1EK0EJ07001002J01831CJ0C38EK01JFC,gT038J01PF8J0FJ0F8J01MFCJ07801CI0LFC007FFC3FK0EJ07003003J01C31CJ0C18EL0JF8,gT038J01PF8J0FJ0F8J01MFCJ07801CI0LFI0IF87F8J0EJ07003003K0C318J0C18EL07IF,gT038J01PF8J0FJ0F8J03MFCJ07801CI0KFEI0IF0FFCJ0EJ07001003K07FF8J0618EL03FFE,gT038J01PF8J0FJ0F8J03MFCJ07801CI0KF8001FFE0FFCJ0EJ07001806K0IFK0319CM0FF8,gT038J01PF8J0FJ0F8J03MFCJ07801CI0JFEI03FFE1FFEJ0EJ07001E0EJ01FFEK03FFC,gT038J01PF8J0FJ0TFCJ07801CI07FF8J07FFC3IFJ0EJ07I0FFCJ018M07FF8K08,gT038O0FE003F8J0FJ0TFCJ07801CQ07FF87IF8I0EJ07I03F8S0FFCL0F,gT038O0FE003F8J0FJ0TFCJ07801CU0JF8I0EJ07Y0CN0FC,gT038O0FE003F8J0FJ0TFCJ07801CU0JFCI0EJ07gN0FF,gT038O0FE003F8J0FJ0TFCJ07801CU0JFCI0EJ07P01KFR0FFC,gT038O0FE003F8J0FJ0TFCJ07801CU07IF8I0EJ07P01KFR07FF,gT038O0FE003F8J0FJ0TFCJ07801CQ07FF87IFJ0EJ07001C0EJ01KFI0KF8I01FFE,gT038N01FE003F8J0FJ0F8J03MFCJ07801CI0JFEI03FFC3IFJ0EJ07003C0FL07L0KF8J07FF8,gT038N07FE003F8J0FJ0F8J03MFCJ07801CI0KF8001FFE1FFEJ0EJ07001C0EL038L078M07FFE,gT038N0FFE003F8J0FJ0F8J03MFCJ07801CI0KFC001FFE0FFCJ0EJ07R07CL03CM079FF8,gT038M03IF003F8J0FJ0F8J01MFCJ07801CI0LFI0IF0FF8J0EJ07R0FFL01EM0787FE,gT038M07IF003F8J0FJ0F8J01MFCJ07801CI0LF8007FF87F8J0EJ07Q03C78K03FM0780FF8,gT038L01JF007F8J0FJ0F8J01MFCJ07801CI0LFC007FFC3FK0EJ07Q0783CK0F38L07807F8,gT038L03JF80FF8J0FJ0F8K0MFCJ07801CI0MF003FFE1EK0EJ07P01E00CJ01E1CL0781FF8,gT038L07NFK0FJ0F8K0MFCJ07801CI0MF801FFE1CK0EJ07P01CM0780EL078FFE,gT038K01IF3KFK0FJ0F8K0MFCJ07801CI0MFC00IF0CK0EJ07P01N0F006L07BFF,gT038K03FFE3JFEK0FJ0F8K07LFCJ07801CI0MFER0EJ07Y0CO07FFC,gT038K0IF81JFEK0FJ0F8K03LFCJ07801CI0NF8Q0EJ07R0F8U0IF,gT038J01IF00JFCK0FJ0F8K03LFCJ07801CI0NFCQ0EJ07Q03FET03FFC,gT038J01FFC007IF8K0FQ01LFCJ07801CI0KF1FFCQ0EJ07Q07FFL0FEL0IF,gT038J01FF8003IFL0FR0LFCJ07801CI0KF87FEQ0EJ07Q0E278J03FFL0FF8,gT038J01FFJ0FFEL0FR07KFCJ07801CI0KFC3FEQ0EJ07I03FFJ01C238J079B8K0FE,gT038J01FCJ01EM0FR03KFCJ07801CI0KFE0FEQ0EJ07I0IFCI018218J0719CK0F8,gT038J01F8S0FR01KFCJ07801CI0LF07CQ0EJ07001F03EI01821CJ0E18CK0E,gT038J01ET0FS0KFCJ07801CI07KFCS0EJ07001C007I01821CJ0C18E,gT038J01CT0FS07JFCJ07801CJ01JFES0EJ070038003I01821CJ0C18E,gT038J018T0FS03JFCJ07801CK07JFS0EJ070038003I01C218J0C18E,gT038J01U0FT0JFCJ07801CK03JFCR0EJ070038003J0C238J0E18E,gT038J01U0FT03IFCJ07801CK01KFR0EJ070018007J0C3FK0619C,gT038J01CT0FU0IFCJ07801CL07NFCM0EJ07001E00FK03EK071BC,gT038J01F8S0FU01FFCJ07801CL03NFEM0EJ07I0IFEK038K041F8,gT038J01FES0FV01FCJ07801CM0NFEM0EJ07I03FF8S01E,gT038J01FFCR0FgI07801CM07MFEM0EJ07,gT038J01IFR0FgI07801CM01MFCM0EJ07,gT038J01IFEQ0FgI07801CN0MF8M0EJ07K0F8I01IFC,gT038J01JF8P0FgI07801CgI0EJ07J01FEI01IFCJ0IFE,gT038J01JFEP0FgI07801CgI0EJ07J03DEL07K0IFE,gT038K07JFCO0FgI07801CgI0EJ070010307L038J0IFEM07F,gT038K01KFO0FgI07801CgI0EJ070018703L018L018L03FFE,gT038L03JFEN0FgI07801CgI0EJ07001C703L01CM0CL07IF,gT038L01KF8M0FgI07801CgI0EJ07I0E303L01CM0EK01JFC,gT038L01KFEM0FgI07801CgI0EJ07I07B07L01CM0EK03JFE,gT038L01FBJFCL0FgI07801CgI0EJ07I03FCEU0EK03FC0FE,gT038L01F8KFL0FgI07801CgI0EJ07J0FFEL04N06K07E003F,gT038L01F80JFEK0FgI07801CgI0EJ07J03F8J0C1FT07C001F,gT038L01F801JF84I0FgI07801CgI0EJ07P01C1F8J06078K078I0F8,gT038L01F8003IFC7I0FgI07801CgI0EJ07P018398J060FCK078I078,gT038L01F8I07FFC7800FgI07801CgI0EJ07J0EK01831CJ0E0FCK0FJ078,gT038L01F8I0IFC7E00FgI07801CgI0EJ07I07FCJ01861CJ0C18EK0FJ078,gT038L01F8007IFC7F80F8gH07801EgH01EJ07I0IFJ018618J0C18EK0FJ078,gT038L01F803JF07FC0gKF801gJFEJ07001C3F8I01FE18J0C38EK0FJ078,gT038L01F83JF803FC0gKF801gJFEJ0700181BCJ0FC18J0E70EK078I078,gT038L01F9JFE001FC0gKF801gJFEJ07003818EJ078L07F0CK078I078,gT038L01LF8I07C05BgHFB8015gHFE6J070038187R07E0CK078I0F8,gT038L01KFCJ03ChX070018183R018M07CI0F,gT038L01KFK01ChX07001C38gH03F003F,gT038L07JFCL0ChX07I0FFK01KFR03FE1FE,gT038K01JFEiL07I07EK01KFR01JFE,gT038K0KF8iL07P01JFEI0KF8J0JFC,gT038J01JFEiM07S038J0KF8J07IF8,gT038J01JFiN07S018L018L01FFE,gT038J01IFCiN07J06N01CM0CM03F,gT038J01IFiO07J06N01CM0C,gT038J01FF8iO07J06N01CM0E,gT038J01FES0gKF801gJFEJ07J06N038M0E,gT038J01FT0gKF801gJFEJ07J06K01IF8M0EK0LF,gT038J01CT0gKF801gJFEJ07J06K01IFM03CK0LF,gT038J01U0gKF801gJFEJ07P01FF8K0IFCK0LF,gT038g0FgI07801EgI0EJ07Y0IFL0KFE,gT038g0FgI07801CgI0EJ07gQ01FC,gT038g0FgI07801CgI0EJ07I07FF8gJ03F8,gT038g0FgI07801CgI0EJ07I0IFCJ03FF8V07E,gT038N01FFCN0FgI07801CgI0EJ07001E00EJ0IFCV0FC,gT038M01JF8M0FgI07801CgI0EJ070018007J0IF8J03FFEM01F8,gT038M07JFEM0FgI07801CgI0EJ070038003I01CM07FFEM03F,gT038L01LF8L0FgI07801CgI0EJ070038003I018M07P07E,gT038L07LFCL0FgI07801CgI0EJ070018003I018M0EP0FC,gT038L0MFEL0FgI07801CgI0EJ07001C007I018M0CO01F8,gT038K01NFL0FgI07801CgI0EJ07I0F01EI01CM0CO07F,gT038K03NF8K0FgI07801CgI0EJ07I07FFCJ0CM0CO0FE,gT038K03IF01IFCK0FgI07801CgI0EJ07I01FFK0EM06N01KF,gT038K07FF8001FFEK0FgI07801CgI0EJ07P01IFCJ07N03KF,gT038K07FEJ07FEK0FQ07CP07801CgI0EJ07I018K01IFCJ0IFEK07KF,gT038K0FFCJ03FFK0FQ03FCO07801CI0F8X0EJ07I01CT0IFEK0LF,gT038K0FF8J01FFK0FQ03FF8N07801C001F8X0EJ07I01ET0IFEK0LF,gT038J01FFL0FF8J0FQ01FFEN07801C001F8X0EJ07I01F8,gT038J01FEL07F8J0FQ01IF8M07801C001F8X0EJ07I019C,gT038J01FEL03F8J0FR0IFEM07801C001F8X0EJ07I018EJ01KF,gT038J01FCL03F8J0FR0JFM07801C001F8X0EJ07I0183K0KFI0KF8,gT038J03FCL03FCJ0FR0JF8L07801C001F8X0EJ07I01818J0C038J0KF8,gT038J03FCL01FCJ0FR0JFCL07801C001F8P03M0EJ07001IFEI01C018J07JF8I0LF,gT038J03F8L01FCJ0FR0JFEL07801C001F8P03CL0EJ07003JFI018018J0600CK0LF,gT038J03F8L01FCJ0FQ01KFL07801C001F8P03EL0EJ07001JFI01801CJ0C00CK0LF,gT038J03F8L01FCJ0FQ01KF8K07801C001F8P03F8K0EJ07I018K01801CJ0C00EK0LF,gT038J03F8L01FCJ0FQ03KFCK07801C001F87QFEK0EJ07P01C018J0C00EK0LF,gT038J03F800FE001FCJ0FQ07KFEK07801C001F87RF8J0EJ07I01FEK0C038J0E00EK0F,gT038J03F800FE001FCJ0FQ07KFEK07801C001F87RFCJ0EJ07I0IFCJ0F0FK0E00CK0F,gT038J03F800FE001FCJ0FQ07LFK07801C001F87SFJ0EJ07I0F83EJ07FFK0703CK0F,gT038J01FC00FE001FCJ0FQ03LFK07801C001F87SF8I0EJ07001C007J03FCK03FF8K0F,gT038J01FC00FE003FCJ0FQ01LF8J07801C001F87SFJ0EJ070018003R01FFL0F,gT038J01FE00FE003F8J0FQ01LF8J07801C001F87RFEJ0EJ070038003S0FCL0F,gT038J01KFE003F8J0FJ0F8L0LFCJ07801C001F87RF8J0EJ070038003gG0F,gT038K0KFE007F8J0FI01FCL0LFCJ07801C001F87QFEK0EJ070018007gG0F,gT038K0KFE007F8J0FI03FCL0LFCJ07801C001F87OF7FCK0EJ07001C00FJ0CV0F,gT038K0KFE007FK0FI03F8L0LFEJ07801C001F8P03FL0EJ07I0IFEI01EV0F,gT038K07JFE001FK0FI07FM0LFEJ07801C001F8P03CL0EJ07I03FFCI01EM07N0F,gT038K07JFEI0EK0FI07EM0LFEJ07801C001F8P038L0EJ07J07CJ01CM0FN0F,gT038K03JFEO0FI07EL01LFEJ07801C001F8P02M0EJ07Y0FN0F,gT038K03JFEO0FI07EL01MFJ07801C001F8X0EJ07Y06,gT038K01JFCO0FI07EL03MFJ07801C001F8X0EJ07J06,gT038g0FI07FL07MFJ07801C001F8X0EJ07J06,gT038g0FI07UFJ07801C001F8X0EJ07J06O08S0LF,gT038g0FI03UFJ07801C001F8X0EJ07J06N01CS0LF,gT038g0FI03UFEI07801C001F8X0EJ07J06L07IF8L06K0LF,gT038g0FI01VF8007801C001F8X0EJ07Q0JF8L0EK0LF,gT038g0FJ0VFI07801C001F8X0EJ07P01JF8I03IFCJ0LF,gT038g0FJ07TFCI07801C001F8X0EJ07P01C01CJ07IFC,gT038g0FJ03TF8I07801C001F8X0EJ07J03CJ01801CJ0F00E,gT038J01PF8J0FQ0NFJ07801C001F8X0EJ07I07FF8I01801CJ0E00E,gT038J01PF8J0FQ07MFJ07801C001F8X0EJ07I0IFCI018018J0C00E,gT038J01PF8J0FQ03MFJ07801C001F8X0EJ07001E00EJ08M0C00E,gT038J01PF8J0FQ01MFJ07801C001F8P02M0EJ070018007R0E,gT038J01PF8J0FQ01MFJ07801C001F8P038L0EJ070038003K0FU0LF,gT038J01PF8J0FR0MFJ07801C001F8P03EL0EJ070038003J03FEL0FCL0LF,gT038J01PF8J0FR0MFJ07801C001F8P03FL0EJ070018003J07FFK01FFL0LF,gT038J01PF8J0FR0LFEJ07801C001F87QFCK0EJ07001C007J0E27K03FF8K0KFE,gT038g0FR0LFEJ07801C001F87RFK0EJ07I0F03EI01C238J0719CK07JFC,gT038g0FR0LFEJ07801C001F87RF8J0EJ07I07FFCI01C218J0618CN03F8,gT038g0FQ01LFCJ07801C001F87RFEJ0EJ07I01FFJ01821CJ0E18EN07F,gT038g0FQ01LFCJ07801C001F87SF8I0EJ07P01821CJ0C18EN0FE,gT038g0FQ03LFCJ07801C001F87SF8I0EJ07P01821CJ0C18EM01FC,gT038g0FQ03LF8J07801C001F87SFJ0EJ07I08L01C218J0C18EM03F,gT038g0FQ07LF8J07801C001F87RFCJ0EJ070018006J0C238J0E18CM07E,gT038g0FQ0MFK07801C001F87RFK0EJ070018003J0C3FK0619CM0FC,gT038g0FQ07LFK07801C001F87QFEK0EJ070038003K03EK061F8L01F8,gT038g0FQ03KFEK07801C001F8P03F8K0EJ070038183K038L01FM03F,gT038J01PF8J0FQ01KFCK07801C001F8P03EL0EJ070038183gH07E,gT038J01PF8J0FQ01KFCK07801C001F8P03CL0EJ0700183C7gG01FEIF,gT038J01PF8J0FR0KF8K07801C001F8P03M0EJ07001C7FEJ03FCL038L03KF,gT038J01PF8J0FR0KFL07801C001F8X0EJ07I0FE7EJ07FEK01FFL07KF,gT038J01PF8J0FR0JFEL07801C001F8X0EJ07I07C18J0F0FK03FF8K0LF,gT038J01PF8J0FR0JFCL07801C001F8X0EJ07Q0E038J0783CK0LF,gT038J01PF8J0FR0JFM07801C001F8X0EJ07P01C018J0701C,gT038J01PF8J0FR0IFEM07801C001F8X0EJ07P018018J0E00C,gT038J01FCS0FQ01IF8M07801C001F8X0EJ07003I06I01801CJ0C00E,gT038J01FCS0FQ01FFEN07801C001F8X0EJ070038006I01801CJ0C00E,gT038J01FCS0FQ03FF8N07801CgI0EJ07003E003I018018J0C00E,gT038J01FCS0FQ07FCO07801CgI0EJ07003F003I01C038J0E00EK07KF,gT038J01FCS0FQ07CP07801CgI0EJ07003BC03J0C038J0601CK0LF,gT038J01FCS0FgI07801CgI0EJ070038E03R0700CK0LF,gT038J01FCS0FgI07801CgI0EJ070038787gG0LF,gT038J01FCS0FgI07801CgI0EJ0700381FEgG0LF,gT038J01FCS0FgI07801CgI0EJ0700380FEgG0F01E0F,gT038J01FCS0FgI07801CgI0EJ070038018I01KFI0KF8I0F01E0F,gT038J01FCS0FgI07801CgI0EJ070018L01KFI0KF8I0F01E0F,gT038J01FCS0FgI07801CgI0EJ07S03K0KF8I0F01E0F,gT038J01FCS0FgI07801CgI0EJ07S018L01CK0F01E0F,gT038J01FCS0FgI07801CgI0EJ07003I06L018M0CK0F01E0F,gT038J01FCS0FgI07801CgI0EJ070038006L01CM0EK0F01E0F,gT038J01FCS0FgI07801EgI0EJ07003E007L01CM0EK0F01E0F,gT038J01FCS0gKF801gJFEJ07003F003L018M0EK0F01E0F,gT038J01FCS0gKF801gJFEJ07003BC03L078M0EK0FJ0F,gT038J01FCS0gKF801gJFEJ070039E03I01IFK0IFCK0FJ0F,gT038J01FCS0gKF801gJFEJ070038787I01FFEK0IF8K0FJ0F,gT038iW0700383FER0IFL0FJ07,gT038iW0700380FE,gT038iW07003803C,gT038iW070018,gT038iW07,:::::,:::::::::::::::^FS\n"
                + "\n"
                + "^FX Informacion de envio.\n"
                + "^CF0," + String.valueOf(iE_alturaFuente) + "\n"
                + informacionEnvio + "\n"
                + "\n"
                + "^FX Informacion de contenido.\n"
                + "^CF0," + String.valueOf(iC_alturaFuente) + "\n"
                + informacionContenido + "\n"
                + "\n"
                + "^FX Fecha de envio.\n"
                + "^CF0," + String.valueOf(fE_alturaFuente) + "\n"
                + "^AOR^FO" + String.valueOf(fE_posXY.x) + "," + String.valueOf(fE_posXY.y) + "^FDFecha: " + getFecha() + "^FS\n"
                + "\n"
                + "^FX Numero de orden.\n"
                + "^CF0," + String.valueOf(nO_alturaFuente) + "\n"
                + "^AOR^FO" + String.valueOf(nO_posXY.x) + "," + String.valueOf(nO_posXY.y) + "^FDOrd.No:^FS\n"
                + "\n"
                + "^FX Codigo de barras (Numero de orden).\n"
                + "^FO" + String.valueOf(cB_posXY.x) + "," + String.valueOf(cB_posXY.y) + "^BY3\n"
                + "^BER," + String.valueOf(cB_altura) + ",Y,N\n"
                + "^FD" + String.valueOf(cB_codigo) + "^FS"
                + "^XZ";

        try {
            DocFlavor flavor = DocFlavor.BYTE_ARRAY.AUTOSENSE;
            Doc doc = new SimpleDoc(plantilla.getBytes(), flavor, null);
            DocPrintJob docPrintJob = printService.createPrintJob();
            docPrintJob.print(doc, null);
        } catch (PrintException | NullPointerException ex) {
            JOptionPane.showMessageDialog(this,
                    "Error con la impresora seleccionada, verifique si a seleccionado la "
                    + "impresora correcta o instale el driver correspondiente.",
                    "Impresi√≥n de etiqueta",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_JBtImprimirActionPerformed

    private void JCmbImpresoraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JCmbImpresoraItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            APP.configInit.nombreImpresora = evt.getItem();
        }
    }//GEN-LAST:event_JCmbImpresoraItemStateChanged

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtNombre.setText("");
        txtDireccion.setText("");
        txtEmail.setText("");
        txtTelefono.setText("");
        txtCiudad.setText("");
        txtProvincia.setText("");
        txtMasInformacion.setText("");
        txtInfoCont.setText("");
        txtCodigoBarras.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private PrintService findPrintService(String printerName) {
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
        for (PrintService printService : printServices) {
            if (printService.getName().trim().equals(printerName)) {
                return printService;
            }
        }
        return null;
    }

    private String getInformacionEnvio(int iE_alturaFuente, int iE_interlineado, Point iE_posXY) {
        int anchoEnPixeles = 550;
        String informacionEnvio = "";
        numLineasInfoEnvio = 0;

        if (!txtNombre.getText().isEmpty()) {
            for (String txt : justificarTexto(txtNombre.getText(), iE_alturaFuente, anchoEnPixeles)) {
                informacionEnvio = informacionEnvio + "^AOR^FO" + String.valueOf(iE_posXY.x - iE_interlineado * numLineasInfoEnvio) + "," + String.valueOf(iE_posXY.y) + "^FD" + txt + "^FS\n";
                numLineasInfoEnvio++;
            }
        }
        if (!txtTelefono.getText().isEmpty()) {
            for (String txt : justificarTexto("Telf: " + txtTelefono.getText(), iE_alturaFuente, anchoEnPixeles)) {
                informacionEnvio = informacionEnvio + "^AOR^FO" + String.valueOf(iE_posXY.x - iE_interlineado * numLineasInfoEnvio) + "," + String.valueOf(iE_posXY.y) + "^FD" + txt + "^FS\n";
                numLineasInfoEnvio++;
            }
        }
        if (!txtEmail.getText().isEmpty()) {
            for (String txt : justificarTexto("Email: " + txtEmail.getText(), iE_alturaFuente, anchoEnPixeles)) {
                informacionEnvio = informacionEnvio + "^AOR^FO" + String.valueOf(iE_posXY.x - iE_interlineado * numLineasInfoEnvio) + "," + String.valueOf(iE_posXY.y) + "^FD" + txt + "^FS\n";
                numLineasInfoEnvio++;
            }
        }
        if (!txtDireccion.getText().isEmpty()) {
            for (String txt : justificarTexto("Dir: " + txtDireccion.getText() + ", " + txtCiudad.getText() + "-" + txtProvincia.getText(), iE_alturaFuente, anchoEnPixeles)) {
                informacionEnvio = informacionEnvio + "^AOR^FO" + String.valueOf(iE_posXY.x - iE_interlineado * numLineasInfoEnvio) + "," + String.valueOf(iE_posXY.y) + "^FD" + txt + "^FS\n";
                numLineasInfoEnvio++;
            }
        }
        if (!txtMasInformacion.getText().isEmpty()) {
            for (String txt : justificarTexto(txtMasInformacion.getText(), iE_alturaFuente, anchoEnPixeles)) {
                informacionEnvio = informacionEnvio + "^AOR^FO" + String.valueOf(iE_posXY.x - iE_interlineado * numLineasInfoEnvio) + "," + String.valueOf(iE_posXY.y) + "^FD" + txt + "^FS\n";
                numLineasInfoEnvio++;
            }
        }

        return informacionEnvio;
    }

    private String getInformacionContenido(int iC_alturaFuente, int iC_interlineado, Point iC_posXY) {
        int anchoEnPixeles = 500;
        String informacionContenido = "";
        numLineasInfoCont = 0;

        if (!txtInfoCont.getText().isEmpty()) {
            for (String txt : justificarTexto("Contenido: " + txtInfoCont.getText(), iC_alturaFuente, anchoEnPixeles)) {
                informacionContenido = informacionContenido + "^AOR^FO" + String.valueOf(iC_posXY.x - iC_interlineado * numLineasInfoCont) + "," + String.valueOf(iC_posXY.y) + "^FD" + txt + "^FS\n";
                numLineasInfoCont++;
            }
        }

        return informacionContenido;
    }

    private ArrayList<String> justificarTexto(String cadena, int altoFuente, int anchoEnPixeles) {
        ArrayList<String> texto = new ArrayList<>();
        Font fuente = new Font("Swis721 BlkCn BT", Font.PLAIN, altoFuente);
        JTextArea aux = new JTextArea(cadena);
        aux.setFont(fuente);
        byte bytes[] = cadena.getBytes();
        int inicioLinea = 0;
        int posEspacio = 0;

        // Recorro la cadena, mido que cada linea no supere anchoMaximoLinea (en pixeles)
        for (int k = 0; k < cadena.length(); k++) {
            int anchoLinea = aux.getFontMetrics(fuente).bytesWidth(bytes, inicioLinea, k - inicioLinea);
            if (cadena.charAt(k) == ' ') {
                posEspacio = k;
            }

            // Separo la cadena de texto en varias lineas, de modeo que que texto 
            // permanezca solo dentro del area de informacion.
            if (anchoLinea >= anchoEnPixeles || cadena.charAt(k) == '\n') {
                // Aseguro que la separacion de las lineas se haga en los espacios entre 
                // palabras.
                if (cadena.charAt(k) != ' ' && posEspacio > inicioLinea && cadena.charAt(k) != '\n') {
                    k = posEspacio;
                }
//                System.out.println(cadena.substring(inicioLinea, k + 1) + "   " + anchoLinea);
                texto.add(cadena.substring(inicioLinea, k + 1));
                inicioLinea = k + 1;
            }
        }
//        System.out.println(cadena.substring(inicioLinea, cadena.length()));
        texto.add(cadena.substring(inicioLinea, cadena.length()));
        return texto;
    }

    private String getFecha() {
        Calendar c = Calendar.getInstance();
        String dia = Integer.toString(c.get(Calendar.DATE));
        String mes = Integer.toString(c.get(Calendar.MONTH));
        String anyo = Integer.toString(c.get(Calendar.YEAR));
        switch (mes) {
            case "0":
                mes = "ene";
                break;
            case "1":
                mes = "feb";
                break;
            case "2":
                mes = "mar";
                break;
            case "3":
                mes = "abr";
                break;
            case "4":
                mes = "may";
                break;
            case "5":
                mes = "jun";
                break;
            case "6":
                mes = "jul";
                break;
            case "7":
                mes = "ago";
                break;
            case "8":
                mes = "sep";
                break;
            case "9":
                mes = "oct";
                break;
            case "10":
                mes = "nov";
                break;
            case "11":
                mes = "dic";
                break;
        }
        return mes + " " + dia + " de " + anyo;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtImprimir;
    private javax.swing.JComboBox<String> JCmbImpresora;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtInfoCont;
    private javax.swing.JTextArea txtMasInformacion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtProvincia;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
